Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	
	ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");
	ПараметрыРегистрации.Вставить("Наименование", "Выгрузка регл отчетности");
	
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	
	ПараметрыРегистрации.Вставить("Версия", "1.0");    
	ПараметрыРегистрации.Вставить("Информация", "Выгрузка регл отчетности");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	ДобавитьКоманду(ТаблицаКоманд, "Выгрузка регл отчетности", "ВыгрузкаРеглОтчетности", "ОткрытиеФормы", Истина, "");
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()

   Команды = Новый ТаблицаЗначений;
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры

Функция РезультатПреобразования(ПараметрыОтчета) Экспорт
	
	ЗаписьJSON = Новый ЗаписьJSON; 
	ЗаписьJSON.ПроверятьСтруктуру = Ложь;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(, Символы.Таб);
	
	КаталогВременныхФайлов = КаталогВременныхФайлов();  
	ИмяФайла = СтрЗаменить(ПараметрыОтчета.Документ.УникальныйИдентификатор(), "-","") + ".json"; 
	ПолныйПуть = КаталогВременныхФайлов + "\" + ИмяФайла;

	ЗаписьJSON.ОткрытьФайл(ПолныйПуть, , , ПараметрыЗаписиJSON); 
	
	СоставСлужащих = Новый ТаблицаЗначений;
	СоставСлужащих.Колонки.Добавить("Код");
	СоставСлужащих.Колонки.Добавить("Наименование");
	СоставСлужащих.Колонки.Добавить("КодСтроки");

	ВидОтчета = ПараметрыОтчета.ВидОтчета; 
	
	Если ПараметрыОтчета.ВидОтчета = "001001" Тогда 
		СоставСлужащих.Очистить();
		ЗаполнитьСоставВоенный(СоставСлужащих);
		ПараметрыОтчета.Вставить("СоставСлужащих", СоставСлужащих);
		ПодготовитьДанныеДляРасчетаДДВоен(ПараметрыОтчета, ЗаписьJSON);	
	ИначеЕсли ПараметрыОтчета.ВидОтчета = "001002" Тогда
       	СоставСлужащих.Очистить();
		ЗаполнитьСоставСотрудники(СоставСлужащих);
		ПараметрыОтчета.Вставить("СоставСлужащих", СоставСлужащих);
		 ПодготовитьДанныеДляРасчетаДДСотр(ПараметрыОтчета, ЗаписьJSON);	
	ИначеЕсли  ПараметрыОтчета.ВидОтчета = "001003" Тогда  
		СоставСлужащих.Очистить();
		ЗаполнитьСоставГражданские(СоставСлужащих);
		ПараметрыОтчета.Вставить("СоставСлужащих", СоставСлужащих);
        ПодготовитьДанныеДляРасчетаЗП(ПараметрыОтчета, ЗаписьJSON);		
	КонецЕсли;
	
	ЗаписьJSON.Закрыть();  
	
	ИмяАрхива = ПолучитьИмяВременногоФайла("ZIP");
	Архив = Новый ЗаписьZipФайла(ИмяАрхива);
	Архив.Добавить(ПолныйПуть, РежимСохраненияПутейZIP.НеСохранятьПути);
	Архив.Записать();
	
	Адрес  = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяАрхива), АдресВременногоХранилища);
	УдалитьФайлы(ПолныйПуть);
	УдалитьФайлы(ИмяАрхива);
	Возврат  Адрес;	
	
КонецФункции   

#Область РасчетДДВоен 

Процедура ПодготовитьДанныеДляРасчетаДДВоен(ПараметрыОтчета, ЗаписьJSON)
	
	ЗаписатьНачалоШапкиОтчета(ПараметрыОтчета, ЗаписьJSON);
	
	УИД_Методики = Новый УникальныйИдентификатор;
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Методики)); 
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Методики));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:budgetAllocationMethodic");
	ЗаписьJSON.ЗаписатьИмяСвойства("mixins");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	    ЗаписьJSON.ЗаписатьЗначение("kr:comment");
	ЗаписьJSON.ЗаписатьКонецМассива();
	
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_dataBookName","Расчет потребности в бюджетных ассигнованиях на выплату денежного довольствия военнослужащим");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_dataBookTemplate","mRG_0000113");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_dataBookTemplateVersion",1);
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_intoRequest",false);
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_obasFormsCode","0000113");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_obasFormsName","Расчет потребности в бюджетных ассигнованиях на выплату денежного довольствия военнослужащим");
		УИД_Формы = Новый УникальныйИдентификатор;
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_obasFormsUuid",Строка(УИД_Формы));
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_planningMethod","ПМ");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_promiseStatus","Д");
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	    ЗаписьJSON.ЗаписатьНачалоОбъекта();
		    ЗаписатьСвойствоJSON(ЗаписьJSON, "name","pln:sheets");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type","pln:dataSheetsList");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
    			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes"); 
			ЗаписьJSON.ЗаписатьНачалоМассива(); 
				ЗаписатьРазделыОтчета(ПараметрыОтчета, ЗаписьJSON);
			ЗаписьJSON.ЗаписатьКонецМассива();
		ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьКонецМассива();
	
	ЗаписатьОкончаниеШапкиОтчета(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаписатьРазделыОтчета(ПараметрыОтчета, ЗаписьJSON)
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьПотребностьВоен(ПараметрыОтчета, ЗаписьJSON);  // Потребность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьЧисленностьВоен(ПараметрыОтчета, ЗаписьJSON);  // Численность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьСредРасходВоен(ПараметрыОтчета, ЗаписьJSON);  // Сред. расход
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьРасчОклада1Воен(ПараметрыОтчета, ЗаписьJSON);  // Расчет оклада 1
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьРасчОклада2Воен(ПараметрыОтчета, ЗаписьJSON);  // Расчет оклада 2
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьУвеличОкладВоен(ПараметрыОтчета, ЗаписьJSON);  // Увелич оклада
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаВыслугаЛетВоен(ПараметрыОтчета, ЗаписьJSON);  // Выслуга лет
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаКлассностьВоен(ПараметрыОтчета, ЗаписьJSON);  // Классность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаГостайнаВоен(ПараметрыОтчета, ЗаписьJSON);  // Гостайна
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаОсобыеУсловия(ПараметрыОтчета, ЗаписьJSON);  // Особые условия
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаПоощрительныеВыплаты(ПараметрыОтчета, ЗаписьJSON);  // Поощрительные выплаты
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаРайонныйКоэффициент(ПараметрыОтчета, ЗаписьJSON);  // Районный коэффициент
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаСеверная(ПараметрыОтчета, ЗаписьJSON);  // Северная
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаЮридическая(ПараметрыОтчета, ЗаписьJSON);  // Юридическая
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаГостайнаСтаж(ПараметрыОтчета, ЗаписьJSON);  // Стаж гостайна
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаШифр(ПараметрыОтчета, ЗаписьJSON);  // Стаж гостайна
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаСКР(ПараметрыОтчета, ЗаписьJSON);  // СКР
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаполнитьНадбавкаДоплатаЗаРиск(ПараметрыОтчета, ЗаписьJSON);  // Надбавка за риск
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаполнитьНадбавкаФСБ(ПараметрыОтчета, ЗаписьJSON);  // Надбавка ФСБ
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаполнитьНадбавкаПрочие(ПараметрыОтчета, ЗаписьJSON);  // Надбавка Прочие
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
КонецПроцедуры

Процедура ЗаполнитьПотребностьВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Потребность =  Новый УникальныйИдентификатор;
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "01_ПотребностьИТОГО");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Потребность));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Потребность в бюджетных ассигнованиях на выплату денежного довольствия военнослужащим");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowTotal");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 1);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
						
	ЧисленностьВоенных = ЧисленностьВоенных(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьВоенных.числОфВысшие;
	числОфСтаршие = ЧисленностьВоенных.числОфСтаршие;  
	числОфМладшие = ЧисленностьВоенных.числОфМладшие;
	числПрапорщики = ЧисленностьВоенных.числПрапорщики;
	числСолдаты = ЧисленностьВоенных.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьВоенных.числКурсантыКонтракт;
	числКурсантыДоКонтракта = ЧисленностьВоенных.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьВоенных.числСлужПоПризыву;
	ТаблицаПотребности = ПараметрыОтчета.ДанныеПоРазделам.П0000100001;
	
	Для Каждого стрПотребность Из ТаблицаПотребности Цикл  
		
		СуммаВсего  = стрПотребность.П000010000113;
		
		Если СуммаВсего = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаВсегоОфицеры = стрПотребность.П000010000103;
		СуммаОфВысшие = стрПотребность.П000010000104; 
		СуммаОфСтаршие =  стрПотребность.П000010000105;
		СуммаОфМладшие = стрПотребность.П000010000106;
		СуммаПрапорщики = стрПотребность.П000010000107;
		СуммаСолдаты = стрПотребность.П000010000108;
		СуммаПоКонтракту = стрПотребность.П000010000109;
		СуммаДоКонтракта = стрПотребность.П000010000110;
		СуммаПоПризыву = стрПотребность.П000010000111;							 
		
		срСуммаОфВысшие = ?(числОфВысшие = 0, 0, Окр(СуммаОфВысшие/числОфВысшие/12, 2)); 
		срСуммаОфСтаршие =  ?(числОфСтаршие = 0, 0, Окр(СуммаОфСтаршие/числОфСтаршие/12, 2));
		срСуммаОфМладшие = ?(числОфМладшие = 0, 0, Окр(СуммаОфМладшие/числОфМладшие/12, 2));
		срСуммаПрапорщики = ?(числПрапорщики = 0, 0, Окр(СуммаПрапорщики/числПрапорщики/12, 2));
		срСуммаСолдаты = ?(числСолдаты = 0, 0, Окр(СуммаСолдаты/числСолдаты/12, 2));
		срСуммаПоКонтракту = ?(числКурсантыКонтракт = 0, 0, Окр(СуммаПоКонтракту/числКурсантыКонтракт/12, 2));
		срСуммаДоКонтракта = ?(числКурсантыДоКонтракта = 0, 0, Окр(СуммаДоКонтракта/числКурсантыДоКонтракта/12, 2));
		срСуммаПоПризыву = ?(числСлужПоПризыву = 0, 0, Окр(СуммаПоПризыву/числСлужПоПризыву/12, 2));
								
		ВидРасчета = стрПотребность.П000010000101;
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
   		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				//ЗаписатьСвойствоJSON(ЗаписьJSON, "csr_value", "???");
				//ЗаписатьСвойствоJSON(ЗаписьJSON, "directionName_value", "???Текущее денежное содержание"); // какие еще могут быть?
				//ЗаписатьСвойствоJSON(ЗаписьJSON, "direction_value", "???0324");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				//ЗаписатьСвойствоJSON(ЗаписьJSON, "grbs_value", "???180");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "osgu_value", "211"); // кроме 211 - что еще может быть
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "2");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowTotal");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value","ФЭД");  // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subject_value","180");   // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "имяРасходов_value", ВидРасчета.Наименование);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "кодРасходов_value", ВидРасчета.Код);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхКурсантыДоКонтракта_value", срСуммаДоКонтракта);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхКурсантыКонтракт_value", срСуммаПоКонтракту);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхОфВысшие_value", срСуммаОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхОфМладшие_value", срСуммаОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхОфСтаршие_value", срСуммаОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхПрапорщики_value", срСуммаПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхСлужПоПризыву_value", срСуммаПоПризыву);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхСолдаты_value", срСуммаСолдаты);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", СуммаВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", СуммаВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", СуммаВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value","0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value","0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаКурсантыДоКонтракта_value", СуммаДоКонтракта);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаКурсантыКонтракт_value", СуммаПоКонтракту);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНадбавкиПрочие_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНадбавкиФСБ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВСЕГО_value", СуммаВсегоОфицеры);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВысшие_value", СуммаОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфМладшие_value", СуммаОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфСтаршие_value", СуммаОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаПрапорщики_value", СуммаПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСлужПоПризыву_value", СуммаПоПризыву);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСолдаты_value", СуммаСолдаты);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "числКурсантыДоКонтракта_value", числКурсантыДоКонтракта);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "числКурсантыКонтракт_value", числКурсантыКонтракт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфВысшие_value", числОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфМладшие_value", числОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфСтаршие_value", числОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "числПрапорщики_value", числПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "числСлужПоПризыву_value", числСлужПоПризыву);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "числСолдаты_value", числСолдаты);
			ЗаписьJSON.ЗаписатьКонецОбъекта();                   
		ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры   

Процедура ЗаполнитьЧисленностьВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Численность =  Новый УникальныйИдентификатор;

	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "02_Численность");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Численность));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Численность военнослужащих");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowNumByRank");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 2);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
						
	ЧисленностьВоенных = ЧисленностьВоенных(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВсего = ЧисленностьВоенных.числОфВсего;
	числОфВысшие = ЧисленностьВоенных.числОфВысшие;
	числОфСтаршие = ЧисленностьВоенных.числОфСтаршие;  
	числОфМладшие = ЧисленностьВоенных.числОфМладшие;
	числПрапорщики = ЧисленностьВоенных.числПрапорщики;
	числСолдаты = ЧисленностьВоенных.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьВоенных.числКурсантыКонтракт;
	числКурсантыДоКонтракта = ЧисленностьВоенных.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьВоенных.числСлужПоПризыву;
	числВсего = ЧисленностьВоенных.числВсего;
	ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
   		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", Строка(ПараметрыОтчета.КодРаздела));
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "1");  // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowNumByRank");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "имяСтроки_value", "строкаРасчета");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числКурсантыДоКонтракта_value", числКурсантыДоКонтракта);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числКурсантыКонтракт_value", числКурсантыКонтракт);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфВСЕГО_value", числОфВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфВысшие_value", числОфВысшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфМладшие_value", числОфМладшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфСтаршие_value", числОфСтаршие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числПрапорщики_value", числПрапорщики);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числРасчетнаяИТОГО_value", числВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСлужПоПризыву_value", числСлужПоПризыву);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСолдаты_value", числСолдаты);
			ЗаписьJSON.ЗаписатьКонецОбъекта();                   
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьСредРасходВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_СредРасход =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "03_СредниеРасхНа1Воен");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_СредРасход));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Средние расходы на содержание 1 военнослужащего в месяц");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowExpens");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 3);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
							
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
	
	окладДолжОфВысшие = Окр(РасчетОкладов.П000040000204, 2);
	окладДолжОфСтаршие = Окр(РасчетОкладов.П000060000204, 2);
	окладДолжОфМладшие = Окр(РасчетОкладов.П000080000204, 2);						 
	окладДолжПрапорщики = Окр(РасчетОкладов.П000100000204, 2);						 
	окладДолжСолдаты = Окр(РасчетОкладов.П000120000204, 2); 
	окладДолжКурсантыКонтракт = Окр(РасчетОкладов.П000140000204, 2);  
	окладДолжКурсантыДоКонтракта = Окр(РасчетОкладов.П000160000204, 2);
	окладДолжСлужПоПризыву = 0;    					

	окладЗванОфВысшие = Окр(РасчетОкладов.П000050000204, 2);
	окладЗванОфСтаршие = Окр(РасчетОкладов.П000070000204, 2); 
	окладЗванОфМладшие = Окр(РасчетОкладов.П000090000204, 2); 
	окладЗванПрапорщики = Окр(РасчетОкладов.П000110000204, 2); 
	окладЗванСолдаты = Окр(РасчетОкладов.П000130000204, 2);
	окладЗванКурсантыКонтракт = Окр(РасчетОкладов.П000150000204, 2);

	ЧисленностьВоенных = ЧисленностьВоенных(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьВоенных.числОфВысшие;
	числОфСтаршие = ЧисленностьВоенных.числОфСтаршие;  
	числОфМладшие = ЧисленностьВоенных.числОфМладшие;
	числПрапорщики = ЧисленностьВоенных.числПрапорщики;
	числСолдаты = ЧисленностьВоенных.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьВоенных.числКурсантыКонтракт;
	числКурсантыДоКонтракта = ЧисленностьВоенных.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьВоенных.числСлужПоПризыву;
	числВсего = ЧисленностьВоенных.числВсего;
	ТаблицаПотребности = ПараметрыОтчета.ДанныеПоРазделам.П0000100001;

	Для Каждого стрПотребность Из ТаблицаПотребности Цикл  
		
		СуммаВсего  = стрПотребность.П000010000113;
		
		Если СуммаВсего = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаВсегоОфицеры = стрПотребность.П000010000103;
		СуммаОфВысшие = стрПотребность.П000010000104; 
		СуммаОфСтаршие =  стрПотребность.П000010000105;
		СуммаОфМладшие = стрПотребность.П000010000106;
		СуммаПрапорщики = стрПотребность.П000010000107;
		СуммаСолдаты = стрПотребность.П000010000108;
		СуммаПоКонтракту = стрПотребность.П000010000109;
		СуммаДоКонтракта = стрПотребность.П000010000110;
		СуммаПоПризыву = стрПотребность.П000010000111;							 
		
		срСуммаОфВысшие = ?(числОфВысшие = 0, 0, Окр(СуммаОфВысшие/числОфВысшие/12, 2)); 
		срСуммаОфСтаршие =  ?(числОфСтаршие = 0, 0, Окр(СуммаОфСтаршие/числОфСтаршие/12, 2));
		срСуммаОфМладшие = ?(числОфМладшие = 0, 0, Окр(СуммаОфМладшие/числОфМладшие/12, 2));
		срСуммаПрапорщики = ?(числПрапорщики = 0, 0, Окр(СуммаПрапорщики/числПрапорщики/12, 2));
		срСуммаСолдаты = ?(числСолдаты = 0, 0, Окр(СуммаСолдаты/числСолдаты/12, 2));
		срСуммаПоКонтракту = ?(числКурсантыКонтракт = 0, 0, Окр(СуммаПоКонтракту/числКурсантыКонтракт/12, 2));
		срСуммаДоКонтракта = ?(числКурсантыДоКонтракта = 0, 0, Окр(СуммаДоКонтракта/числКурсантыДоКонтракта/12, 2));
		срСуммаПоПризыву = ?(числСлужПоПризыву = 0, 0, Окр(СуммаПоПризыву/числСлужПоПризыву/12, 2));
		срСуммаОфВсего = срСуммаОфВысшие +  срСуммаОфСтаршие + срСуммаОфМладшие;
		срСуммаВсего = срСуммаОфВсего + срСуммаПрапорщики + срСуммаСолдаты + срСуммаПоКонтракту + срСуммаДоКонтракта + срСуммаПоПризыву;
		
		ВидРасчета = стрПотребность.П000010000101;
		
		надбОфВысшие = 0; 
		надбОфСтаршие = 0;
		надбОфМладшие = 0;
		надбПрапорщики = 0;
		надбСолдаты = 0;
		надбКурсантыКонтракт = 0;
		надбКурсантыДоКонтракта = 0;
		надбСлужПоПризыву = 0;
		
		Если СтрНайти(ВидРасчета.Наименование, "Оклад") = 0 Тогда
			надбОфВысшие = ?(окладДолжОфВысшие = 0, 0, Формат(срСуммаОфВысшие/окладДолжОфВысшие*100, "ЧДЦ=2")); 
			надбОфСтаршие = ?(окладДолжОфСтаршие = 0, 0, Формат(срСуммаОфСтаршие/окладДолжОфСтаршие*100, "ЧДЦ=2"));
			надбОфМладшие = ?(окладДолжОфМладшие = 0, 0, Формат(срСуммаОфМладшие/окладДолжОфМладшие*100, "ЧДЦ=2"));
			надбПрапорщики = ?(окладДолжПрапорщики = 0, 0, Формат(срСуммаПрапорщики/окладДолжПрапорщики*100, "ЧДЦ=2"));
			надбСолдаты = ?(окладДолжСолдаты = 0, 0, Формат(срСуммаСолдаты/окладДолжСолдаты*100, "ЧДЦ=2"));
			надбКурсантыКонтракт = ?(окладДолжКурсантыКонтракт = 0, 0, Формат(срСуммаПоКонтракту/окладДолжКурсантыКонтракт*100, "ЧДЦ=2"));
			надбКурсантыДоКонтракта = ?(окладДолжКурсантыДоКонтракта = 0, 0, Формат(срСуммаДоКонтракта/окладДолжКурсантыДоКонтракта*100, "ЧДЦ=2"));
			надбСлужПоПризыву = ?(окладДолжСлужПоПризыву = 0, 0, Формат(срСуммаПоПризыву/окладДолжСлужПоПризыву*100, "ЧДЦ=2"));
		КонецЕсли;
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "alterType_value", "01"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowExpense");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбКурсантыДоКонтракта_value", надбКурсантыДоКонтракта);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбКурсантыКонтракт_value", надбКурсантыКонтракт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбОфВысшие_value", надбОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбОфМладшие_value", надбОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбОфСтаршие_value", надбОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбПрапорщики_value", надбПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбСлужПоПризыву_value", надбСлужПоПризыву);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбСолдаты_value", надбСолдаты);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжКурсантыДоКонтракта_value", окладДолжКурсантыДоКонтракта);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжКурсантыКонтракт_value", окладДолжКурсантыКонтракт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжОфВысшие_value", окладДолжОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжОфМладшие_value", окладДолжОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжОфСтаршие_value", окладДолжОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжПрапорщики_value", окладДолжПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжСлужПоПризыву_value", окладДолжСлужПоПризыву);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжСолдаты_value", окладДолжСолдаты);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванКурсантыКонтракт_value", окладЗванКурсантыКонтракт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванОфВысшие_value", окладЗванОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванОфМладшие_value", окладЗванОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванОфСтаршие_value", окладЗванОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванПрапорщики_value", окладЗванПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванСолдаты_value", окладЗванСолдаты);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "расходыИмя_value", ВидРасчета.Наименование);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "расходыКод_value", ВидРасчета.Код);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаКурсантыДоКонтракта_value", срСуммаДоКонтракта);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаКурсантыКонтракт_value", срСуммаПоКонтракту);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВСЕГО_value", срСуммаОфВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВысшие_value", срСуммаОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфМладшие_value", срСуммаОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфСтаршие_value", срСуммаОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаПрапорщики_value", срСуммаПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасчетнаяИТОГО_value", срСуммаВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасчетнаяТекГод_value", "0");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСлужПоПризыву_value", срСуммаПоПризыву);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСолдаты_value", срСуммаСолдаты);
			ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		ЗаписьJSON.ЗаписатьКонецОбъекта();		
	КонецЦикла;  
	
	ОформитьПодвалТаблицы(ЗаписьJSON); 						
						
КонецПроцедуры

Процедура ЗаполнитьРасчОклада1Воен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_РасчетОкладов1 =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "04_РасчетОкладов1");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_РасчетОкладов1));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет окладов («Высшие офицеры», «Старшие офицеры», «Младшие офицеры», «Прапорщики», «Сержанты, старшины, солдаты, матросы по контракту», «Курсанты по контракту»)");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 4);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
	
	ЧисленностьВоенных = ЧисленностьВоенных(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьВоенных.числОфВысшие;
	числОфСтаршие = ЧисленностьВоенных.числОфСтаршие;  
	числОфМладшие = ЧисленностьВоенных.числОфМладшие;
	числПрапорщики = ЧисленностьВоенных.числПрапорщики;
	числСолдаты = ЧисленностьВоенных.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьВоенных.числКурсантыКонтракт;
	
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
    ОкладыПоТарифамОфВысш = ПараметрыОтчета.ДанныеПоРазделам.П0000400001;
	ОкладыПоТарифамОфВысш.Колонки.П000040000101.Имя = "Разряд";
	ОкладыПоТарифамОфВысш.Колонки.П000040000102.Имя = "Оклад";
	ОкладыПоТарифамОфВысш.Колонки.П000040000103.Имя = "Количество";
	
	ОкладыПоТарифамОфСтар = ПараметрыОтчета.ДанныеПоРазделам.П0000600001; 
	ОкладыПоТарифамОфСтар.Колонки.П000060000101.Имя = "Разряд";
	ОкладыПоТарифамОфСтар.Колонки.П000060000102.Имя = "Оклад";
	ОкладыПоТарифамОфСтар.Колонки.П000060000103.Имя = "Количество";

	ОкладыПоТарифамОфМлад = ПараметрыОтчета.ДанныеПоРазделам.П0000800001;
	ОкладыПоТарифамОфМлад.Колонки.П000080000101.Имя = "Разряд";
	ОкладыПоТарифамОфМлад.Колонки.П000080000102.Имя = "Оклад";
	ОкладыПоТарифамОфМлад.Колонки.П000080000103.Имя = "Количество";

    ОкладыПоТарифамПрапор = ПараметрыОтчета.ДанныеПоРазделам.П0001000001;
	ОкладыПоТарифамПрапор.Колонки.П000100000101.Имя = "Разряд";
	ОкладыПоТарифамПрапор.Колонки.П000100000102.Имя = "Оклад";
	ОкладыПоТарифамПрапор.Колонки.П000100000103.Имя = "Количество";
	
	ОкладыПоТарифамСолдаты = ПараметрыОтчета.ДанныеПоРазделам.П0001200001;
	ОкладыПоТарифамСолдаты.Колонки.П000120000101.Имя = "Разряд";
	ОкладыПоТарифамСолдаты.Колонки.П000120000102.Имя = "Оклад";
	ОкладыПоТарифамСолдаты.Колонки.П000120000103.Имя = "Количество";

	ОкладыПоТарифамКонтракт = ПараметрыОтчета.ДанныеПоРазделам.П0001400001;
	ОкладыПоТарифамКонтракт.Колонки.П000140000101.Имя = "Разряд";
	ОкладыПоТарифамКонтракт.Колонки.П000140000102.Имя = "Оклад";
	ОкладыПоТарифамКонтракт.Колонки.П000140000103.Имя = "Количество";
	
	ОкладыПоЗваниямОфВысш = ПараметрыОтчета.ДанныеПоРазделам.П0000500001; 
	ОкладыПоЗваниямОфВысш.Колонки.П000050000101.Имя = "Звание";
	ОкладыПоЗваниямОфВысш.Колонки.П000050000102.Имя = "Оклад";
	ОкладыПоЗваниямОфВысш.Колонки.П000050000103.Имя = "Количество";

    ОкладыПоЗваниямОфСтар = ПараметрыОтчета.ДанныеПоРазделам.П0000700001;
	ОкладыПоЗваниямОфСтар.Колонки.П000070000101.Имя = "Звание";
	ОкладыПоЗваниямОфСтар.Колонки.П000070000102.Имя = "Оклад";
	ОкладыПоЗваниямОфСтар.Колонки.П000070000103.Имя = "Количество";
	
	ОкладыПоЗваниямОфМлад = ПараметрыОтчета.ДанныеПоРазделам.П0000900001;
	ОкладыПоЗваниямОфМлад.Колонки.П000090000101.Имя = "Звание";
	ОкладыПоЗваниямОфМлад.Колонки.П000090000102.Имя = "Оклад";
	ОкладыПоЗваниямОфМлад.Колонки.П000090000103.Имя = "Количество";

	ОкладыПоЗваниямПрапор = ПараметрыОтчета.ДанныеПоРазделам.П0001100001;
	ОкладыПоЗваниямПрапор.Колонки.П000110000101.Имя = "Звание";
	ОкладыПоЗваниямПрапор.Колонки.П000110000102.Имя = "Оклад";
	ОкладыПоЗваниямПрапор.Колонки.П000110000103.Имя = "Количество";

	ОкладыПоЗваниямСолдаты = ПараметрыОтчета.ДанныеПоРазделам.П0001300001;
	ОкладыПоЗваниямСолдаты.Колонки.П000130000101.Имя = "Звание";
	ОкладыПоЗваниямСолдаты.Колонки.П000130000102.Имя = "Оклад";
	ОкладыПоЗваниямСолдаты.Колонки.П000130000103.Имя = "Количество";
	
	ОкладыПоЗваниямКонтракт = ПараметрыОтчета.ДанныеПоРазделам.П0001500001;
	ОкладыПоЗваниямКонтракт.Колонки.П000150000101.Имя = "Звание";
	ОкладыПоЗваниямКонтракт.Колонки.П000150000102.Имя = "Оклад";
	ОкладыПоЗваниямКонтракт.Колонки.П000150000103.Имя = "Количество";
	
	окладДолжОфВысшие = Окр(РасчетОкладов.П000040000204, 2);
	окладДолжОфСтаршие = Окр(РасчетОкладов.П000060000204, 2);
	окладДолжОфМладшие = Окр(РасчетОкладов.П000080000204, 2);						 
	окладДолжПрапорщики = Окр(РасчетОкладов.П000100000204, 2);						 
	окладДолжСолдаты = Окр(РасчетОкладов.П000120000204, 2); 
	окладДолжКурсантыКонтракт = Окр(РасчетОкладов.П000140000204, 2);  
	окладДолжСлужПоПризыву = 0;    					

	окладЗванОфВысшие = Окр(РасчетОкладов.П000050000204, 2);
	окладЗванОфМладшие = Окр(РасчетОкладов.П000070000204, 2); 
	окладЗванОфСтаршие = Окр(РасчетОкладов.П000090000204, 2); 
	окладЗванПрапорщики = Окр(РасчетОкладов.П000110000204, 2); 
	окладЗванСолдаты = Окр(РасчетОкладов.П000130000204, 2);
	окладЗванКурсантыКонтракт = Окр(РасчетОкладов.П000150000204, 2); 
	
	// Высшие офицеры
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "4");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжОфВысшие * числОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванОфВысшие * числОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Высшие офицеры");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010001");
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	
	
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, окладыПоТарифамОфВысш);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямОфВысш);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
	ЗаписьJSON.ЗаписатьКонецОбъекта();	
	
	// Старшие офицеры 
			
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжОфСтаршие * числОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванОфСтаршие * числОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Старшие офицеры");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010002");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамОфСтар);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямОфСтар);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	// Младшие офицеры
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжОфМладшие * числОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванОфМладшие * числОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Младшие офицеры");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010003");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамОфМлад);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямОфМлад);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	// Прапорщики 
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжПрапорщики * числПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванПрапорщики * числПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Прапорщики");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010004");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамПрапор);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямПрапор);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	
	// Солдаты
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД");  // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжСолдаты * числСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванСолдаты * числСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Сержанты, старшины, солдаты, матросы по контракту");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010005");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамСолдаты);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямСолдаты);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	// КурсантыКонтрактники

    ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжКурсантыКонтракт * числКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванКурсантыКонтракт * числКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Курсанты по контракту");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010006");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамКонтракт);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямКонтракт);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта();

	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьРасчОклада2Воен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_РасчетОкладов1 =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "05_РасчетОкладов2");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_РасчетОкладов1));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет окладов («Курсанты до заключения контракта», «Военнослужащие по призыву»)");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalaryAdd");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 5);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
	
	ЧисленностьВоенных = ЧисленностьВоенных(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	
	числКурсантыДоКонтракта = ЧисленностьВоенных.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьВоенных.числСлужПоПризыву;
	
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
   	
	ОкладыПоТарифамДоКонтракта = ПараметрыОтчета.ДанныеПоРазделам.П0001600001;
	ОкладыПоТарифамДоКонтракта.Колонки.П000160000101.Имя = "Разряд";
	ОкладыПоТарифамДоКонтракта.Колонки.П000160000102.Имя = "Оклад";
	ОкладыПоТарифамДоКонтракта.Колонки.П000160000103.Имя = "Количество";

	ОкладыПоТарифамПризыв = ПараметрыОтчета.ДанныеПоРазделам.П0001800001;
	ОкладыПоТарифамПризыв.Колонки.П000180000101.Имя = "Разряд";
	ОкладыПоТарифамПризыв.Колонки.П000180000102.Имя = "Оклад";
	ОкладыПоТарифамПризыв.Колонки.П000180000103.Имя = "Количество";
	
	окладДолжКурсантыДоКонтракта = Окр(РасчетОкладов.П000160000204, 2);
	окладДолжСлужПоПризыву = 0; 
	
	// До контракта 	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "4");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числКурсантыДоКонтракта);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжКурсантыДоКонтракта * числКурсантыДоКонтракта);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжКурсантыДоКонтракта);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Курсанту до заключения контракта");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010007");
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	
	
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамДоКонтракта);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	// Призыв 	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "2");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числСлужПоПризыву);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжСлужПоПризыву * числСлужПоПризыву);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжСлужПоПризыву);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Военнослужащие по призыву");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010008");
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
	
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамДоКонтракта);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаписатьДанныеПоТарифам(ЗаписьJSON, окладыПоТарифам)

	УИД_Раздела = Строка(Новый УникальныйИдентификатор);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияПоДолжности");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Раздела);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет по должности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalarySubTablePost");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияПоДолжности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		Если окладыПоТарифам.Итог("Количество")>0 Тогда
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    	ЗаписьJSON.ЗаписатьНачалоМассива();
			Для Каждого стрТариф Из окладыПоТарифам Цикл 
				Количество = стрТариф.Количество;
				Оклад = стрТариф.Оклад;
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				УИД_Строки = Строка(Новый УникальныйИдентификатор);
		    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalarySubTablePost");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "оклад_value", Оклад);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаИтого_value", Количество * Оклад);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "тарифныйРазрядИмя_value", стрТариф.Разряд.Наименование);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "тарифныйРазрядКод_value", Строка(стрТариф.Разряд.УникальныйИдентификатор()));
					ЗаписьJSON.ЗаписатьКонецОбъекта(); 
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;
			ЗаписьJSON.ЗаписатьКонецМассива();
		КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива();

КонецПроцедуры 

Процедура ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниям)
	
	УИД_Раздела = Строка(Новый УникальныйИдентификатор);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияПоЗванию");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Раздела);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет по званию");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalarySubTableRank");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияПоЗванию");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 2);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    	ЗаписьJSON.ЗаписатьНачалоМассива();
		Для Каждого стрЗвание Из ОкладыПоЗваниям Цикл 
			Количество = стрЗвание.Количество;
			Оклад = стрЗвание.Оклад;
			Если Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			УИД_Строки = Строка(Новый УникальныйИдентификатор);
	    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();	
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalarySubTableRank");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "званиеИмя_value", стрЗвание.Звание.Наименование);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "званиеКод_value", Строка(стрЗвание.Звание.УникальныйИдентификатор()));
					ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "оклад_value", Оклад);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаИтого_value", Количество * Оклад);
				ЗаписьJSON.ЗаписатьКонецОбъекта(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		КонецЦикла;
		ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива(); 
	
КонецПроцедуры

Процедура ЗаполнитьУвеличОкладВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_РасчетОкладов =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "10_УвеличОкладовПоВоинскДолжности");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_РасчетОкладов);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Увеличение окладов");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 6);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокУвеличениеОкладовВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокУвеличениеОкладов"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00020");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON); 
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаВыслугаЛетВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаЗаВыслугу =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "11_НадбавкаВыслугаЛет");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаЗаВыслугу);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за выслугу лет");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 7);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокВыслугаЛетВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокВыслугаЛет"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00021");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры    

Процедура ЗаполнитьНадбавкаКлассностьВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаКлассность =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "12_НадбавкаКлассность");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаКлассность);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за классность");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 8);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокКлассностьВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокКлассность"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00022");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаГостайнаВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаГостайна =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "13_НадбавкаГостайна");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаГостайна);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за работу со сведениями составляющими гостайну");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 9);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокГостайнаВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокГостайна"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00023");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);

	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры  

Процедура ЗаполнитьНадбавкаОсобыеУсловия(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаОсобыеУсловия =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "14_НадбавкаОсобыеУсловия");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаОсобыеУсловия);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за особые условия службы");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 10);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокОсобыеУсловия;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокОсобыеУсловияСлужбы"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00024");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры

Процедура ЗаполнитьНадбавкаПоощрительныеВыплаты(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаПоощрительные =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "15_НадбавкаОсобыеДостижения");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаПоощрительные);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за особые достижения в службе");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 11);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокПоощрения;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокПоощрительныеВыплаты"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00025");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаРайонныйКоэффициент(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаРайонныйКоэффициент =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "16_НадбавкаРайонныйКоэффициент");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаРайонныйКоэффициент);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Районный коэффициент");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 12);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокРайКоэффициент;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокРайонныйКоэффициент"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00026");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);

	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаСеверная(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаСеверная =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "17_НадбавкаСеверная");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаСеверная);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за службу в отдаленных местностях");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 13);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСеверная;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСевернаяНадбавка"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00027");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаЮридическая(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаЮридическая =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "18_НадбавкаЮридическая");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаЮридическая);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка военнослужащим юридических подразделений");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 14);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокЮридическая;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокЮридическаяНадбавка"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00028");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаГостайнаСтаж(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаГостайнаСтаж =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "19_НадбавкаГостайнаСтаж");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаГостайнаСтаж);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за стаж военной службы в структурных подразделениях по защите гостайны");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 15);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСтажГостайнаВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСтажГостайны"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00029");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаШифр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаШифр =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "20_НадбавкаШифр");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаШифр);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за стаж работы в шифровальных органах");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 16);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСтажШифрВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСтажШифровальнойРаботы"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00030");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаСКР(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаСКР =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "УИД_НадбавкаСКР");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаСКР);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за службу в СКР");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 17);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ДанныеПоНадбавке = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетНадбавокСлужбаВСКР;
	ТаблНадбавка = Новый ТаблицаЗначений;
	ТаблНадбавка.Колонки.Добавить("П000310000101");
	ТаблНадбавка.Колонки.Добавить("П000310000102");
	ТаблНадбавка.Колонки.Добавить("П000310000103");
	ТаблНадбавка.Колонки.Добавить("П000310000104");
	ТаблНадбавка.Колонки.Добавить("П000310000105");
	ТаблНадбавка.Колонки.Добавить("П000310000106");
	
	стрТабл = ТаблНадбавка.Добавить();
	стрТабл.П000310000101 = ДанныеПоНадбавке.П000310000101;
	стрТабл.П000310000102 = ДанныеПоНадбавке.П000310000102;
	стрТабл.П000310000103 = ДанныеПоНадбавке.П000310000103;
	стрТабл.П000310000104 = ДанныеПоНадбавке.П000310000104;
	стрТабл.П000310000105 = ДанныеПоНадбавке.П000310000105;
	стрТабл.П000310000106 = ДанныеПоНадбавке.П000310000106;
	
	стрТабл = ТаблНадбавка.Добавить();
	стрТабл.П000310000101 = ДанныеПоНадбавке.П000310000201;
	стрТабл.П000310000102 = ДанныеПоНадбавке.П000310000202;
	стрТабл.П000310000103 = ДанныеПоНадбавке.П000310000203;
	стрТабл.П000310000104 = ДанныеПоНадбавке.П000310000204;
	стрТабл.П000310000105 = ДанныеПоНадбавке.П000310000205;
	стрТабл.П000310000106 = ДанныеПоНадбавке.П000310000206;
	
	стрТабл = ТаблНадбавка.Добавить();
	стрТабл.П000310000101 = ДанныеПоНадбавке.П000310000301;
	стрТабл.П000310000102 = ДанныеПоНадбавке.П000310000302;
	стрТабл.П000310000103 = ДанныеПоНадбавке.П000310000303;
	стрТабл.П000310000104 = ДанныеПоНадбавке.П000310000304;
	стрТабл.П000310000105 = ДанныеПоНадбавке.П000310000305;
	стрТабл.П000310000106 = ДанныеПоНадбавке.П000310000306; 
	
	ПараметрыОтчета.ДанныеПоРазделам.Вставить("П0003100001",ТаблНадбавка);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСлужбаСКР;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСлужбаВСКР"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00031");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки, "00004", "00005");

	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки, ПодразделЧисл = "00002", ПодразделСрПроц = "00003") 
	
	ПолеТабличногоДокумента = ПараметрыДобавленияНадбавки.ПолеТабличногоДокумента;
	Раздел = ПараметрыДобавленияНадбавки.Раздел;
	ПереченьНадбавок = ПараметрыДобавленияНадбавки.ПереченьНадбавок;
	
	ДанныеПоНадбавке = ПараметрыОтчета.Показатели[ПолеТабличногоДокумента];
	ТаблНадбавок = ПараметрыОтчета.ДанныеПоРазделам[Раздел + "00001"];	
	СоставСлужащих = ПараметрыОтчета.СоставСлужащих;
	
	Для Каждого стрСостав Из СоставСлужащих Цикл 
		КодСтроки = стрСостав.КодСтроки; 
		СвойствоСрПроцент = Раздел + "00003" + КодСтроки;
		Если Не ДанныеПоНадбавке.Свойство(СвойствоСрПроцент) Тогда
			Продолжить;
		КонецЕсли;
		ТаблНадбавкиСлуж = ТаблНадбавок.Скопировать(,Раздел + "0000101," + Раздел + "00001" + КодСтроки);
		ЧислСлуж = ДанныеПоНадбавке[Раздел + ПодразделЧисл + КодСтроки];
		срПроцентСлуж = Окр(ДанныеПоНадбавке[Раздел + ПодразделСрПроц + КодСтроки], 2);
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "1");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", ЧислСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "среднПроцентНадбавки_value", срПроцентСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНадбавок_value", ЧислСлуж * срПроцентСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", стрСостав.Наименование);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", стрСостав.Код);
		    ЗаписьJSON.ЗаписатьКонецОбъекта();
			
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
			ЗаписьJSON.ЗаписатьНачалоМассива();
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
					ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
					ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
					ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();			
					ЗаписьJSON.ЗаписатьКонецОбъекта();  
					ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
					ЗаписьJSON.ЗаписатьНачалоМассива();
						ЗаписьJSON.ЗаписатьНачалоОбъекта();
					    	ЗаписатьДанныеПоПроцентам(ЗаписьJSON, ТаблНадбавкиСлуж, ПереченьНадбавок);
						ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьКонецМассива();
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			ЗаписьJSON.ЗаписатьКонецМассива(); 
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();

	КонецЦикла; 	
	
КонецПроцедуры

Процедура ЗаписатьДанныеПоПроцентам(ЗаписьJSON, ТаблНадбавок, ПереченьНадбавок)
	
	КолонкаНадбавка = ТаблНадбавок.Колонки[0].Имя;
	КолонкаКоличество = ТаблНадбавок.Колонки[1].Имя;
	
	УИД_Раздела = Новый УникальныйИдентификатор;
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияРасчет");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Раздела));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет надбавки по должности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeSubTable");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияРасчет");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Детализации = Новый УникальныйИдентификатор;
	    ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		Если ТаблНадбавок.Итог(КолонкаКоличество) > 0 И  ТаблНадбавок.Итог(КолонкаНадбавка) > 0 Тогда
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    	ЗаписьJSON.ЗаписатьНачалоМассива();
			Для Каждого стрЗвание Из ТаблНадбавок Цикл 
				Количество = стрЗвание[КолонкаКоличество];
				Надбавка = стрЗвание[КолонкаНадбавка];
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли; 
				ИмяНадбавки = "";
				КодНадбавки = "";
				Если Надбавка > 0 Тогда
					стрПоиска = ПереченьНадбавок.Найти(Надбавка, "Размер");
					Если стрПоиска <> Неопределено Тогда
						ИмяНадбавки = стрПоиска.Наименование;
						КодНадбавки = стрПоиска.Код;
					КонецЕсли;
				Иначе
					Продолжить;
				КонецЕсли;
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				УИД_Строки = Новый УникальныйИдентификатор;
		    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Строки));
				ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Строки));
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeSubTable");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаИмя_value", ИмяНадбавки);  
						ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаКод_value", КодНадбавки);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "размерНадбавки_value", Надбавка);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "размерНадбавкиИтого_value", Надбавка * Количество);
					ЗаписьJSON.ЗаписатьКонецОбъекта(); 
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;
			ЗаписьJSON.ЗаписатьКонецМассива(); 
		КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива(); 
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаДоплатаЗаРиск(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаРиск =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "40_ДоплатаЗаРиск");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаРиск);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Ежемесячная надбавка за выполнение задач, непосредственно связанных с риском для жизни и здоровья в мирное время");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeRisk");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 17);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ДанныеПоНадбавке = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетНадбавокДоплатаЗаРиск;
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
		
	СуммаНадбавкаОфВысшие = ДанныеПоНадбавке.П000320000102;
	СуммаНадбавкаОфСтаршие = ДанныеПоНадбавке.П000320000103;  
	СуммаНадбавкаОфМладшие = ДанныеПоНадбавке.П000320000104;
	СуммаНадбавкаПрапорщики = ДанныеПоНадбавке.П000320000105;
	СуммаНадбавкаСолдаты = ДанныеПоНадбавке.П000320000106; 
	СуммаНадбавкаКонтрактники = ДанныеПоНадбавке.П000320000107;
		
	срПроцентОфВысшие = Окр(ДанныеПоНадбавке.П000320000202, 2);
	срПроцентОфСтаршие = Окр(ДанныеПоНадбавке.П000320000203, 2);
	срПроцентОфМладшие = Окр(ДанныеПоНадбавке.П000320000204, 2);
	срПроцентПрапорщики = Окр(ДанныеПоНадбавке.П000320000205, 2);
    срПроцентСолдаты = Окр(ДанныеПоНадбавке.П000320000206, 2);
	срПроцентКонтрактники = Окр(ДанныеПоНадбавке.П000320000207, 2);
    	
	окладДолжОфВысшие = Окр(РасчетОкладов.П000040000204, 2);
	окладДолжОфСтаршие = Окр(РасчетОкладов.П000060000204, 2);
	окладДолжОфМладшие = Окр(РасчетОкладов.П000080000204, 2);						 
	окладДолжПрапорщики = Окр(РасчетОкладов.П000100000204, 2);						 
	окладДолжСолдаты = Окр(РасчетОкладов.П000120000204, 2); 
	окладДолжКурсантыКонтракт = Окр(РасчетОкладов.П000140000204, 2);  
	окладДолжКурсантыДоКонтракта = Окр(РасчетОкладов.П000160000204, 2);				

	ЧисленностьВоенных = ЧисленностьВоенных(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьВоенных.числОфВысшие;
	числОфСтаршие = ЧисленностьВоенных.числОфСтаршие;  
	числОфМладшие = ЧисленностьВоенных.числОфМладшие;
	числПрапорщики = ЧисленностьВоенных.числПрапорщики;
	числСолдаты = ЧисленностьВоенных.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьВоенных.числКурсантыКонтракт;
	числКурсантыДоКонтракта = ЧисленностьВоенных.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьВоенных.числСлужПоПризыву;
     
	ПараметрыСтроки = Новый Структура("ЧислоВоен, СредПроцент, Должность, КодДолжности, ФондНадбавки, Оклад");
	
	// Высшие офицеры 
	ПараметрыСтроки.ЧислоВоен = числОфВысшие;
	ПараметрыСтроки.СредПроцент = срПроцентОфВысшие;
	ПараметрыСтроки.Должность = "Высшие офицеры";
	ПараметрыСтроки.КодДолжности = "010001";
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаОфВысшие; 
	ПараметрыСтроки.Оклад = окладДолжОфВысшие;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	
	// Старшие офицеры 
	ПараметрыСтроки.ЧислоВоен = числОфСтаршие;
	ПараметрыСтроки.СредПроцент = срПроцентОфСтаршие;
	ПараметрыСтроки.Должность = "Старшие офицеры";
	ПараметрыСтроки.КодДолжности = "010002"; 
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаОфСтаршие; 
	ПараметрыСтроки.Оклад = окладДолжОфСтаршие;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки); 
	
	// Младшие офицеры 
	ПараметрыСтроки.ЧислоВоен = числОфМладшие;
	ПараметрыСтроки.СредПроцент = срПроцентОфМладшие;
	ПараметрыСтроки.Должность = "Младшие офицеры";
	ПараметрыСтроки.КодДолжности = "010003";
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаОфМладшие;
	ПараметрыСтроки.Оклад = окладДолжОфМладшие;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);

	// Прапорщики 
	ПараметрыСтроки.ЧислоВоен = числПрапорщики;
	ПараметрыСтроки.СредПроцент = срПроцентПрапорщики;
	ПараметрыСтроки.Должность = "Прапорщики";
	ПараметрыСтроки.КодДолжности = "010004";
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаПрапорщики;
	ПараметрыСтроки.Оклад = окладДолжПрапорщики;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	
	// Солдаты 
	ПараметрыСтроки.ЧислоВоен = числСолдаты;
	ПараметрыСтроки.СредПроцент = срПроцентСолдаты;
	ПараметрыСтроки.Должность = "Сержанты, старшины, солдаты, матросы по контракту";
	ПараметрыСтроки.КодДолжности = "010005";  
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаСолдаты;
	ПараметрыСтроки.Оклад = окладДолжСолдаты;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	
	// Контрактники 
	ПараметрыСтроки.ЧислоВоен = числКурсантыКонтракт;
	ПараметрыСтроки.СредПроцент = срПроцентКонтрактники;
	ПараметрыСтроки.Должность = "Курсанты по контракту";
	ПараметрыСтроки.КодДолжности = "010006";  
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаКонтрактники;
	ПараметрыСтроки.Оклад = окладДолжКурсантыКонтракт;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	
	// Призыв
	Если ДанныеПоНадбавке.Свойство("П000320000208") Тогда
		СуммаНадбавкаПризыв = ДанныеПоНадбавке.П000320000108;
		срПроцентПризыв = Окр(ДанныеПоНадбавке.П000320000208, 2);
	    окладДолжСлужПоПризыву = 0; 
		
		ПараметрыСтроки.ЧислоВоен = числСлужПоПризыву;
		ПараметрыСтроки.СредПроцент = срПроцентПризыв;
		ПараметрыСтроки.Должность = "Военнослужащие по призыву";
		ПараметрыСтроки.КодДолжности = "010008";  
		ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаПризыв;
		ПараметрыСтроки.Оклад = окладДолжСлужПоПризыву;
		ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	КонецЕсли;
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки)
	
	ЧислоВоен = ПараметрыСтроки.ЧислоВоен;
	СредПроцент = ПараметрыСтроки.СредПроцент;
	ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
	Уид_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeRisk");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", ЧислоВоен);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "среднПроцентНадбавки_value", СредПроцент);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", ПараметрыСтроки.Должность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", ПараметрыСтроки.КодДолжности);
	    ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоНадбавкамЗаРиск(ЗаписьJSON, ПараметрыСтроки);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
		
	ЗаписьJSON.ЗаписатьКонецОбъекта();

КонецПроцедуры

Процедура ЗаписатьДанныеПоНадбавкамЗаРиск(ЗаписьJSON, ПараметрыСтроки)
	
	УИД_Раздела = Новый УникальныйИдентификатор;
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияРасчет");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Раздела));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет надбавки");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeRiskSubTable");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияРасчет");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Детализации = Новый УникальныйИдентификатор;
	    ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    	ЗаписьJSON.ЗаписатьНачалоМассива();
		
			Количество = ПараметрыСтроки.ЧислоВоен;
			Надбавка = ПараметрыСтроки.ФондНадбавки;
			Оклад = ПараметрыСтроки.Оклад;
			
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			УИД_Строки = Новый УникальныйИдентификатор;
	    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Строки));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Строки));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();	
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeRiskSubTable");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "имяСтроки_value", "строкаРасчета");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "количСтрокИзТаблицыОкладов_value", 1);  
					ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжности_value", Оклад);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "фондНадбавки_value", Надбавка);
				ЗаписьJSON.ЗаписатьКонецОбъекта(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		 ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива(); 
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаФСБ(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаФСБ =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "41_НадбавкиФСБ");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаФСБ);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавки сотрудникам ФСБ");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeFSB");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 19);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ТаблицаНадбавокФСБ = ПараметрыОтчета.ДанныеПоРазделам.П0003600001;
	
	Для Каждого стрНадбавкаФСБ Из ТаблицаНадбавокФСБ Цикл
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "3");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeFSB");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "имяВыплаты", стрНадбавкаФСБ.П000360000101);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "примечание", стрНадбавкаФСБ.П000360000104);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасхода", стрНадбавкаФСБ.П000360000102);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасходаПрошл", стрНадбавкаФСБ.П000360000103);
			ЗаписьJSON.ЗаписатьКонецОбъекта();
         ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;
		
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаПрочие(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаПрочие =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "42_НадбавкиПрочее");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаПрочие);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: прочие");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeOther");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 19);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ТаблицаНадбавокПрочие = ПараметрыОтчета.ДанныеПоРазделам.П0003500001;
	
	Для Каждого стрНадбавкаПрочие Из ТаблицаНадбавокПрочие Цикл
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "3");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeOther");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "имяВыплаты", стрНадбавкаПрочие.П000350000101);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "комментарий", стрНадбавкаПрочие.П000350000103);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "комментарийПрош", стрНадбавкаПрочие.П000350000105);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасхода", стрНадбавкаПрочие.П000350000102);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасходаПрошл", стрНадбавкаПрочие.П000350000104);
			ЗаписьJSON.ЗаписатьКонецОбъекта();
         ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;
		
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Функция ЧисленностьВоенных(СтруктураПотребность) 
	
	СтруктураЧисленности = Новый Структура;
	СтруктураЧисленности.Вставить("числОфВсего", СтруктураПотребность.П000020000203);
	СтруктураЧисленности.Вставить("числОфВысшие", СтруктураПотребность.П000020000204);
    СтруктураЧисленности.Вставить("числОфСтаршие", СтруктураПотребность.П000020000205);  
  	СтруктураЧисленности.Вставить("числОфМладшие", СтруктураПотребность.П000020000206);
    СтруктураЧисленности.Вставить("числПрапорщики", СтруктураПотребность.П000020000207);
    СтруктураЧисленности.Вставить("числСолдаты", СтруктураПотребность.П000020000208); 
	СтруктураЧисленности.Вставить("числКурсантыКонтракт", СтруктураПотребность.П000020000209);
    СтруктураЧисленности.Вставить("числКурсантыДоКонтракта", СтруктураПотребность.П000020000210);
	СтруктураЧисленности.Вставить("числСлужПоПризыву", СтруктураПотребность.П000020000211);
	СтруктураЧисленности.Вставить("числВсего", СтруктураПотребность.П000020000213);   

	Возврат СтруктураЧисленности;
КонецФункции

#КонецОбласти

#Область РасчетДДСотр

Процедура  ПодготовитьДанныеДляРасчетаДДСотр(ПараметрыОтчета, ЗаписьJSON)
	
	ЗаписатьНачалоШапкиОтчета(ПараметрыОтчета, ЗаписьJSON);
	
	УИД_Методики = Новый УникальныйИдентификатор;
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Методики)); 
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Методики));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:budgetAllocationMethodic");
	ЗаписьJSON.ЗаписатьИмяСвойства("mixins");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	    ЗаписьJSON.ЗаписатьЗначение("kr:comment");
	ЗаписьJSON.ЗаписатьКонецМассива();
	
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_dataBookName","Потребность в бюджетных ассигнованиях на выплату денежного довольствия сотрудникам");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_dataBookTemplate","mRG_0000114");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_dataBookTemplateVersion",1);
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_intoRequest",false);
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_obasFormsCode","0000114");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_obasFormsName","Потребность в бюджетных ассигнованиях на выплату денежного довольствия сотрудникам");
		УИД_Формы = Новый УникальныйИдентификатор;
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_obasFormsUuid",Строка(УИД_Формы));
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_planningMethod","ПМ");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_promiseStatus","Д");
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	    ЗаписьJSON.ЗаписатьНачалоОбъекта();
		    ЗаписатьСвойствоJSON(ЗаписьJSON, "name","pln:sheets");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type","pln:dataSheetsList");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
    			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes"); 
			ЗаписьJSON.ЗаписатьНачалоМассива(); 
				ЗаписатьРазделыОтчетаРасчетДДСотрудники(ПараметрыОтчета, ЗаписьJSON);
			ЗаписьJSON.ЗаписатьКонецМассива();
		ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьКонецМассива();
	
	ЗаписатьОкончаниеШапкиОтчета(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаписатьРазделыОтчетаРасчетДДСотрудники(ПараметрыОтчета, ЗаписьJSON)
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьПотребностьСотр(ПараметрыОтчета, ЗаписьJSON);  // Потребность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьЧисленностьСотр(ПараметрыОтчета, ЗаписьJSON);  // Численность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьСредРасходСотр(ПараметрыОтчета, ЗаписьJSON);  // Сред. расход
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьРасчОкладаСотр(ПараметрыОтчета, ЗаписьJSON);  // Расчет оклада 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьУвеличОкладМОСотр(ПараметрыОтчета, ЗаписьJSON);  // Увеличение окладов МО 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьУвеличОкладСотр(ПараметрыОтчета, ЗаписьJSON);  // Увеличение окладов  
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаВыслугаЛетСотр(ПараметрыОтчета, ЗаписьJSON);  // Выслуга лет 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаКлассностьСотр(ПараметрыОтчета, ЗаписьJSON);  // Классность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаГостайнаСотр(ПараметрыОтчета, ЗаписьJSON);  // Гостайна
	ЗаписьJSON.ЗаписатьКонецОбъекта();                                          
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаОсобыеУсловияСотр(ПараметрыОтчета, ЗаписьJSON);  // Особые условия
	ЗаписьJSON.ЗаписатьКонецОбъекта();                                                     
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаПоощрительныеВыплатыСотр(ПараметрыОтчета, ЗаписьJSON);  // Поощрительные выплаты
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаРискСотр(ПараметрыОтчета, ЗаписьJSON);  // Риск
	ЗаписьJSON.ЗаписатьКонецОбъекта();
    ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаРайонныйКоэффициентСотр(ПараметрыОтчета, ЗаписьJSON);  // Район. коэффиц.
	ЗаписьJSON.ЗаписатьКонецОбъекта();
    ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаСевернаяСотр(ПараметрыОтчета, ЗаписьJSON);  // Северная надбавка
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	   ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаЮридическаяСотр(ПараметрыОтчета, ЗаписьJSON);  // Юридическа
	ЗаписьJSON.ЗаписатьКонецОбъекта();
   	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаГостайнаСтажСотр(ПараметрыОтчета, ЗаписьJSON);  // гостайна стаж
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаШифрСотр(ПараметрыОтчета, ЗаписьJSON);  // Шифр
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаСКРСотр(ПараметрыОтчета, ЗаписьJSON);  // СКР
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаПрочиеСотр(ПараметрыОтчета, ЗаписьJSON);  // Прочие
	ЗаписьJSON.ЗаписатьКонецОбъекта();	
	
КонецПроцедуры 

Процедура ЗаполнитьПотребностьСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Потребность =  Новый УникальныйИдентификатор;
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "01_ПотребностьИТОГО");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Потребность));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Потребность в бюджетных ассигнованиях на выплату денежного довольствия сотрудникам");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowTotal");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 1);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
						
	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьСотрудников.числОфВысшие;
	числОфСтаршие = ЧисленностьСотрудников.числОфСтаршие;  
	числОфСредние = ЧисленностьСотрудников.числОфСредние;
	числМладшие = ЧисленностьСотрудников.числМладшие; 

	ТаблицаПотребности = ПараметрыОтчета.ДанныеПоРазделам.П0000100001;
	
	Для Каждого стрПотребность Из ТаблицаПотребности Цикл  
		
		СуммаВсего  = стрПотребность.П000010000110;
		
		Если СуммаВсего = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаТекГод = стрПотребность.П000010000102; 
		СуммаОфВсего = стрПотребность.П000010000103;
		СуммаОфВысшие = стрПотребность.П000010000104; 
		СуммаОфСтаршие =  стрПотребность.П000010000105;
		СуммаОфСредние = стрПотребность.П000010000106;
		СуммаМладшие = стрПотребность.П000010000107;
				
		срСуммаОфВысшие = ?(числОфВысшие = 0, 0, Окр(СуммаОфВысшие/числОфВысшие/12, 2)); 
		срСуммаОфСтаршие =  ?(числОфСтаршие = 0, 0, Окр(СуммаОфСтаршие/числОфСтаршие/12, 2));
		срСуммаОфСредние = ?(числОфСредние = 0, 0, Окр(СуммаОфСредние/числОфСредние/12, 2));
		срСуммаМладшие = ?(числМладшие = 0, 0, Окр(СуммаМладшие/числМладшие/12, 2));
										
		ВидРасчета = стрПотребность.П000010000101;
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
	   	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    //ЗаписатьСвойствоJSON(ЗаписьJSON, "csr_value", "???");
	            //ЗаписатьСвойствоJSON(ЗаписьJSON, "directionName_value", "???Текущее денежное содержание"); // какие еще могут быть?
	            //ЗаписатьСвойствоJSON(ЗаписьJSON, "direction_value", "???0324");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
	            //ЗаписатьСвойствоJSON(ЗаписьJSON, "grbs_value", "???180");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "osgu_value", "211"); // кроме 211 - что еще может быть
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "2");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowTotal");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value","ФЭД");  // ???
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "subject_value","180");   // ???
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "имяРасходов_value", ВидРасчета.Наименование);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "кодРасходов_value", ВидРасчета.Код);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхВысшие_value", срСуммаОфВысшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхМладшие_value", срСуммаОфСтаршие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхСредние_value", срСуммаОфСредние);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхСтаршие_value", срСуммаМладшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", СуммаВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", СуммаВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", СуммаВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", СуммаТекГод);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаВысшие_value", СуммаОфВысшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаМладшие_value", СуммаМладшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНадбавкиПрочие_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВСЕГО_value", СуммаОфВсего);
               	ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСредние_value", СуммаОфСредние);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСтаршие_value", СуммаОфСтаршие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числВысшие_value", числОфВысшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числМладшие_value", числМладшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСредние_value", числОфСредние);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСтаршие_value", числОфСтаршие);
	         ЗаписьJSON.ЗаписатьКонецОбъекта();                   
		ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры   

Процедура ЗаполнитьЧисленностьСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Численность =  Новый УникальныйИдентификатор;

	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "02_Численность");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Численность));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Численность военнослужащих");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowNumByRank");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 2);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
						
	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность); 
	числОфВсего = ЧисленностьСотрудников.числОфВсего;
	числОфВысшие = ЧисленностьСотрудников.числОфВысшие;
	числОфСтаршие = ЧисленностьСотрудников.числОфСтаршие;  
	числОфСредние = ЧисленностьСотрудников.числОфСредние;
	числМладшие = ЧисленностьСотрудников.числМладшие;
	числВсего = ЧисленностьСотрудников.числВсего;

	ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
   		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", Строка(ПараметрыОтчета.КодРаздела));
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "1");  // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowNumByRank");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "имяСтроки_value", "строкаРасчета");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числВысшие_value", числОфВысшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числМладшие_value", числМладшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфВСЕГО_value", числОфВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числРасчетнаяИТОГО_value", числВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСреднесписочная_value", числВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСредние_value", числОфСредние);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСтаршие_value", числОфСтаршие);
			ЗаписьJSON.ЗаписатьКонецОбъекта();                   
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьСредРасходСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_СредРасход =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "03_СредниеРасхНа1Воен");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_СредРасход));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Средние расходы на содержание 1 военнослужащего в месяц");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowExpense");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 3);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
							
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
	
	окладДолжОфВысшие = Окр(РасчетОкладов.П000040000204, 2);
	окладДолжОфСтаршие = Окр(РасчетОкладов.П000060000204, 2);
	окладДолжОфСредние = Окр(РасчетОкладов.П000080000204, 2);						 
	окладДолжМладшие = Окр(РасчетОкладов.П000100000204, 2);						 
	
	окладЗванОфВысшие = Окр(РасчетОкладов.П000050000204, 2);
	окладЗванОфСтаршие = Окр(РасчетОкладов.П000070000204, 2); 
	окладЗванОфСредние = Окр(РасчетОкладов.П000090000204, 2); 
	окладЗванМладшие = Окр(РасчетОкладов.П000110000204, 2); 
	
	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность); 
	числОфВсего = ЧисленностьСотрудников.числОфВсего;
	числОфВысшие = ЧисленностьСотрудников.числОфВысшие;
	числОфСтаршие = ЧисленностьСотрудников.числОфСтаршие;  
	числОфСредние = ЧисленностьСотрудников.числОфСредние;
	числМладшие = ЧисленностьСотрудников.числМладшие;
	числВсего = ЧисленностьСотрудников.числВсего;

	ТаблицаПотребности = ПараметрыОтчета.ДанныеПоРазделам.П0000100001;

	Для Каждого стрПотребность Из ТаблицаПотребности Цикл  
		
		СуммаВсего  = стрПотребность.П000010000110;
		
		Если СуммаВсего = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаТекГод = стрПотребность.П000010000102; 
		СуммаОфВсего = стрПотребность.П000010000103;
		СуммаОфВысшие = стрПотребность.П000010000104; 
		СуммаОфСтаршие =  стрПотребность.П000010000105;
		СуммаОфСредние = стрПотребность.П000010000106;
		СуммаМладшие = стрПотребность.П000010000107;
				
		срСуммаОфВысшие = ?(числОфВысшие = 0, 0, Окр(СуммаОфВысшие/числОфВысшие/12, 2)); 
		срСуммаОфСтаршие =  ?(числОфСтаршие = 0, 0, Окр(СуммаОфСтаршие/числОфСтаршие/12, 2));
		срСуммаОфСредние = ?(числОфСредние = 0, 0, Окр(СуммаОфСредние/числОфСредние/12, 2));
		срСуммаМладшие = ?(числМладшие = 0, 0, Окр(СуммаМладшие/числМладшие/12, 2));
        срСуммаОфВсего = срСуммаОфВысшие +  срСуммаОфСтаршие + срСуммаОфСредние;
		срСуммаВсего = срСуммаОфВсего + срСуммаМладшие;
		
		ВидРасчета = стрПотребность.П000010000101;
		
		надбОфВысшие = 0; 
		надбОфСтаршие = 0;
		надбОфСредние = 0;
		надбМладшие = 0;
				
		Если СтрНайти(ВидРасчета.Наименование, "Оклад") = 0 Тогда
			надбОфВысшие = ?(окладДолжОфВысшие = 0, 0, Окр(срСуммаОфВысшие/окладДолжОфВысшие*100, 2)); 
			надбОфСтаршие = ?(окладДолжОфСтаршие = 0, 0, Окр(срСуммаОфСтаршие/окладДолжОфСтаршие*100, 2));
			надбОфСредние = ?(окладДолжОфСредние = 0, 0, Окр(срСуммаОфСредние/окладДолжОфСредние*100, 2));
			надбМладшие = ?(окладДолжМладшие = 0, 0, Окр(срСуммаМладшие/окладДолжМладшие*100, 2));
		КонецЕсли;
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "alterType_value", "01"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowExpense");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбВысшие_value", надбОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбМладшие_value", надбМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбСредние_value", надбОфСредние);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбСтаршие_value", надбОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжВысшие_value", окладДолжОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжИсходнВысшие_value", окладДолжОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжИсходнМладшие_value", окладДолжМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжИсходнСредние_value", окладДолжОфСредние);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжИсходнСтаршие_value", окладДолжОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжМладшие_value", окладДолжМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжСредние_value", окладДолжОфСредние);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжСтаршие_value", окладДолжОфСтаршие);
				
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванВысшие_value", окладЗванОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванМладшие_value", окладЗванМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванОфСтаршие_value", окладЗванОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванСредние_value", окладЗванОфСредние);
				
				ЗаписатьСвойствоJSON(ЗаписьJSON, "процУвеличОклВысшие_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "процУвеличОклМОВысшие_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "процУвеличОклМОМладшие_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "процУвеличОклМОСредние_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "процУвеличОклМОСтаршие_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "процУвеличОклМладшие_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "процУвеличОклСредние_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "процУвеличОклСтаршие_value", "0.00");
				
				ЗаписатьСвойствоJSON(ЗаписьJSON, "расходыИмя_value", ВидРасчета.Наименование);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "расходыКод_value", ВидРасчета.Код);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаВысшие_value", срСуммаОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаМладшие_value", срСуммаМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВСЕГО_value", срСуммаОфВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасчетнаяИТОГО_value", срСуммаВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасчетнаяТекГод_value", СуммаТекГод);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСредние_value", срСуммаОфСредние);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСтаршие_value", срСуммаОфСтаршие);
								
			ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		ЗаписьJSON.ЗаписатьКонецОбъекта();		
	КонецЦикла;  
	
	ОформитьПодвалТаблицы(ЗаписьJSON); 						
						
КонецПроцедуры

Процедура ЗаполнитьРасчОкладаСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_РасчетОкладов =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "04_РасчетОкладов");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_РасчетОкладов));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет окладов");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSalary");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 4);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
	
	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьСотрудников.числОфВысшие;
	числОфСтаршие = ЧисленностьСотрудников.числОфСтаршие;  
	числОфСредние = ЧисленностьСотрудников.числОфСредние;
	числМладшие = ЧисленностьСотрудников.числМладшие;
	
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
	
    ОкладыПоДолжОфВысш = ПараметрыОтчета.ДанныеПоРазделам.П0000400001;		
	ОкладыПоДолжОфСтар = ПараметрыОтчета.ДанныеПоРазделам.П0000600001;	
	ОкладыПоДолжОфСред = ПараметрыОтчета.ДанныеПоРазделам.П0000800001;	
	ОкладыПоДолжМлад = ПараметрыОтчета.ДанныеПоРазделам.П0001000001;
		
	ОкладыПоЗваниямОфВысш = ПараметрыОтчета.ДанныеПоРазделам.П0000500001;	
	ОкладыПоЗваниямОфСтар = ПараметрыОтчета.ДанныеПоРазделам.П0000700001;	
	ОкладыПоЗваниямОфСред = ПараметрыОтчета.ДанныеПоРазделам.П0000900001;	
	ОкладыПоЗваниямМлад = ПараметрыОтчета.ДанныеПоРазделам.П0001100001;
	
	окладДолжОфВысшие = Окр(РасчетОкладов.П000040000204, 2);
	окладДолжОфСтаршие = Окр(РасчетОкладов.П000060000204, 2);
	окладДолжОфМладшие = Окр(РасчетОкладов.П000080000204, 2);						 
	окладДолжМлад = Окр(РасчетОкладов.П000100000204, 2);						 
	
	окладЗванОфВысшие = Окр(РасчетОкладов.П000050000204, 2);
	окладЗванОфМладшие = Окр(РасчетОкладов.П000070000204, 2); 
	окладЗванОфСтаршие = Окр(РасчетОкладов.П000090000204, 2); 
	окладЗванМлад = Окр(РасчетОкладов.П000110000204, 2); 
	
	ПараметрыСтроки = Новый Структура("Численность, срОкладДолж, срОкладЗван, Должность, КодДолжности, ОкладыДолж, ОкладыЗван");
	
	// Высший состав
	
	ПараметрыСтроки.Численность = числОфВысшие;
	ПараметрыСтроки.срОкладДолж = окладДолжОфВысшие;
	ПараметрыСтроки.срОкладЗван = окладЗванОфВысшие;
	ПараметрыСтроки.Должность = "Высший начальствующий состав";
	ПараметрыСтроки.КодДолжности = "010009";  
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжОфВысш;
	ПараметрыСтроки.ОкладыЗван = ОкладыПоЗваниямОфВысш;
	ЗаписатьСтрокуРасчетОкладаСотр(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки); 	
	
	// Старший состав 
	
	ПараметрыСтроки.Численность = числОфСтаршие;
	ПараметрыСтроки.срОкладДолж = окладДолжОфСтаршие;
	ПараметрыСтроки.срОкладЗван = окладЗванОфСтаршие;
	ПараметрыСтроки.Должность = "Старший начальствующий состав";
	ПараметрыСтроки.КодДолжности = "010010";
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжОфСтар;
	ПараметрыСтроки.ОкладыЗван = ОкладыПоЗваниямОфСтар;
	ЗаписатьСтрокуРасчетОкладаСотр(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки);
	
	// Средний состав
	
	ПараметрыСтроки.Численность = числОфСтаршие;
	ПараметрыСтроки.срОкладДолж = окладДолжОфСтаршие;
	ПараметрыСтроки.срОкладЗван = окладЗванОфСтаршие;
	ПараметрыСтроки.Должность = "Средний начальствующий состав";
	ПараметрыСтроки.КодДолжности = "010011";   
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжОфСред;
	ПараметрыСтроки.ОкладыЗван = ОкладыПоЗваниямОфСред;
	ЗаписатьСтрокуРасчетОкладаСотр(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки);
	
	// Младший состав 
	
	ПараметрыСтроки.Численность = числОфСтаршие;
	ПараметрыСтроки.срОкладДолж = окладДолжОфСтаршие;
	ПараметрыСтроки.срОкладЗван = окладЗванОфСтаршие;
	ПараметрыСтроки.Должность = "Младший начальствущий и рядовой состав";
	ПараметрыСтроки.КодДолжности = "010012"; 
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжМлад;
	ПараметрыСтроки.ОкладыЗван = ОкладыПоЗваниямМлад;
	ЗаписатьСтрокуРасчетОкладаСотр(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаписатьСтрокуРасчетОкладаСотр(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки)
	
	окладДолж = ПараметрыСтроки.срОкладДолж;
	окладЗван = ПараметрыСтроки.срОкладЗван;
	Численность = ПараметрыСтроки.Численность;
		
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "4");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", Численность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", Численность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолж * Численность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗван * Численность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолж);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗван);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", ПараметрыСтроки.Должность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", ПараметрыСтроки.КодДолжности);
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	
	
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифамСотр(ЗаписьJSON, ПараметрыСтроки.ОкладыДолж);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниямСотр(ЗаписьJSON, ПараметрыСтроки.ОкладыЗван);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
КонецПроцедуры

Процедура ЗаписатьДанныеПоТарифамСотр(ЗаписьJSON, ОкладыПоДолжностям)
	
	КолонкаДолжность = ОкладыПоДолжностям.Колонки[0].Имя;
	КолонкаОклад = ОкладыПоДолжностям.Колонки[1].Имя;
	КолонкаКоличество = ОкладыПоДолжностям.Колонки[2].Имя;
	
	УИД_Раздела = Строка(Новый УникальныйИдентификатор);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияПоДолжности");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Раздела);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет по должности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSalarySubTablePost");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияПоДолжности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		Если ОкладыПоДолжностям.Итог(КолонкаКоличество)>0 Тогда
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    	ЗаписьJSON.ЗаписатьНачалоМассива();
			Для Каждого стрТариф Из ОкладыПоДолжностям Цикл 
				Количество = стрТариф[КолонкаКоличество];
				Оклад = стрТариф[КолонкаОклад];  
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				Должность = стрТариф[КолонкаДолжность];
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				УИД_Строки = Строка(Новый УникальныйИдентификатор);
		    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSalarySubTablePost");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "оклад_value", Оклад);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаИтого_value", Количество * Оклад);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "тарифныйРазрядИмя_value", Должность.Наименование);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "тарифныйРазрядКод_value", Строка(Должность.УникальныйИдентификатор()));
					ЗаписьJSON.ЗаписатьКонецОбъекта(); 
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;
			ЗаписьJSON.ЗаписатьКонецМассива();
		КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива();

КонецПроцедуры 

Процедура ЗаписатьДанныеПоЗваниямСотр(ЗаписьJSON, ОкладыПоЗваниям)
	
	КолонкаЗвание = ОкладыПоЗваниям.Колонки[0].Имя;
	КолонкаОклад = ОкладыПоЗваниям.Колонки[1].Имя;
	КолонкаКоличество = ОкладыПоЗваниям.Колонки[2].Имя;

	УИД_Раздела = Строка(Новый УникальныйИдентификатор);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияПоЗванию");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Раздела);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет по званию");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSalarySubTableRank");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияПоЗванию");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 2);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    	ЗаписьJSON.ЗаписатьНачалоМассива();
		Для Каждого стрЗвание Из ОкладыПоЗваниям Цикл 
			Количество = стрЗвание[КолонкаКоличество];
			Оклад = стрЗвание[КолонкаОклад];
			Если Количество = 0 Тогда
				Продолжить;
			КонецЕсли;  
			Звание = стрЗвание[КолонкаЗвание];
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			УИД_Строки = Строка(Новый УникальныйИдентификатор);
	    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();	
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSalarySubTableRank");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "званиеИмя_value", Звание.Наименование);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "званиеКод_value", Строка(Звание.УникальныйИдентификатор()));
					ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "оклад_value", Оклад);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаИтого_value", Количество * Оклад);
				ЗаписьJSON.ЗаписатьКонецОбъекта(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		КонецЦикла;
		ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива(); 
	
КонецПроцедуры

Процедура ЗаполнитьУвеличОкладМОСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаУвеличОклМО =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "10_УвеличОкладовМО");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаУвеличОклМО);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Увеличение окладов МО");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 5);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ДанныеПоНадбавке = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетНадбавокУвеличениеОкладовМО;
	ТаблНадбавка = Новый ТаблицаЗначений;
	ТаблНадбавка.Колонки.Добавить("П000350000101");
	ТаблНадбавка.Колонки.Добавить("П000350000102");
	ТаблНадбавка.Колонки.Добавить("П000350000103");
	ТаблНадбавка.Колонки.Добавить("П000350000104");
		
	стрТабл = ТаблНадбавка.Добавить();
	стрТабл.П000350000101 = ДанныеПоНадбавке.П000350000101;
	стрТабл.П000350000102 = ДанныеПоНадбавке.П000350000102;
	стрТабл.П000350000103 = ДанныеПоНадбавке.П000350000103;
	стрТабл.П000350000104 = ДанныеПоНадбавке.П000350000104;
	
	стрТабл = ТаблНадбавка.Добавить();
	стрТабл.П000350000101 = ДанныеПоНадбавке.П000350000201;
	стрТабл.П000350000102 = ДанныеПоНадбавке.П000350000202;
	стрТабл.П000350000103 = ДанныеПоНадбавке.П000350000203;
	стрТабл.П000350000104 = ДанныеПоНадбавке.П000350000204;
		
	ПараметрыОтчета.ДанныеПоРазделам.Вставить("П0003500001",ТаблНадбавка);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокУвеличОкладовМОСотр;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСлужбаВСКР"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00035");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки, "00003", "00004");

	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры

Процедура ЗаполнитьУвеличОкладСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_РасчетОкладов =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "11_УвеличОкладов");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_РасчетОкладов);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Увеличение окладов");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 6);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокУвеличениеОкладовСотр;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокУвеличениеОкладов"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00020");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON); 
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаВыслугаЛетСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаЗаВыслугу =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "12_НадбавкаВыслугаЛет");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаЗаВыслугу);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за выслугу лет");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 7);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокВыслугаЛетВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокВыслугаЛет"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00021");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры    

Процедура ЗаполнитьНадбавкаКлассностьСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаКлассность =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "13_НадбавкаКлассность");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаКлассность);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за классность");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 8);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокКлассностьВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокКлассность"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00022");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаГостайнаСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаГостайна =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "14_НадбавкаГостайна");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаГостайна);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за работу со сведениями составляющими гостайну");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 9);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокГостайнаВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокГостайна"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00023");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);

	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры  

Процедура ЗаполнитьНадбавкаОсобыеУсловияСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаОсобыеУсловия =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "15_НадбавкаОсобыеУсловия");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаОсобыеУсловия);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за особые условия службы");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 10);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокОсобыеУсловия;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокОсобыеУсловияСлужбы"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00024");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры

Процедура ЗаполнитьНадбавкаПоощрительныеВыплатыСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаПоощрительные =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "16_НадбавкаОсобыеДостижения");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаПоощрительные);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за особые достижения в службе");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 11);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокПоощрения;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокПоощрительныеВыплаты"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00025");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаРискСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаРиск =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "17_НадбавкаРиск");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаРиск);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за выполнение задач, непосредственно связанных с риском для жизни и здоровья в мирное время");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 12);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокДоплатаЗаРиск;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокДоплатаЗаРиск"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00032");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаРайонныйКоэффициентСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаРайонныйКоэффициент =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "18_НадбавкаРайонныйКоэффициент");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаРайонныйКоэффициент);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Районный коэффициент");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 13);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокРайКоэффициент;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокРайонныйКоэффициент"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00026");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);

	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаСевернаяСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаСеверная =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "19_НадбавкаСеверная");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаСеверная);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за службу в отдаленных местностях");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 14);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСеверная;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСевернаяНадбавка"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00027");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаЮридическаяСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаЮридическая =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "20_НадбавкаЮридическая");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаЮридическая);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка военнослужащим юридических подразделений");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 15);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокЮридическая;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокЮридическаяНадбавка"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00028");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаГостайнаСтажСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаГостайнаСтаж =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "21_НадбавкаГостайнаСтаж");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаГостайнаСтаж);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за стаж военной службы в структурных подразделениях по защите гостайны");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 16);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСтажГостайнаВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСтажГостайны"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00029");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаШифрСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаШифр =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "22_НадбавкаШифр");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаШифр);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за стаж работы в шифровальных органах");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 17);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСтажШифрВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСтажШифровальнойРаботы"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00030");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаСКРСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаСКР =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "УИД_НадбавкаСКР");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаСКР);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за службу в СКР");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 17);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ДанныеПоНадбавке = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетНадбавокСлужбаВСКР;
	ТаблНадбавка = Новый ТаблицаЗначений;
	ТаблНадбавка.Колонки.Добавить("П000310000101");
	ТаблНадбавка.Колонки.Добавить("П000310000102");
	ТаблНадбавка.Колонки.Добавить("П000310000103");
	ТаблНадбавка.Колонки.Добавить("П000310000104");
	ТаблНадбавка.Колонки.Добавить("П000310000105");
		
	стрТабл = ТаблНадбавка.Добавить();
	стрТабл.П000310000101 = ДанныеПоНадбавке.П000310000101;
	стрТабл.П000310000102 = ДанныеПоНадбавке.П000310000102;
	стрТабл.П000310000103 = ДанныеПоНадбавке.П000310000103;
	стрТабл.П000310000104 = ДанныеПоНадбавке.П000310000104;
	стрТабл.П000310000105 = ДанныеПоНадбавке.П000310000105;
		
	стрТабл = ТаблНадбавка.Добавить();
	стрТабл.П000310000101 = ДанныеПоНадбавке.П000310000201;
	стрТабл.П000310000102 = ДанныеПоНадбавке.П000310000202;
	стрТабл.П000310000103 = ДанныеПоНадбавке.П000310000203;
	стрТабл.П000310000104 = ДанныеПоНадбавке.П000310000204;
	стрТабл.П000310000105 = ДанныеПоНадбавке.П000310000205;
		
	стрТабл = ТаблНадбавка.Добавить();
	стрТабл.П000310000101 = ДанныеПоНадбавке.П000310000301;
	стрТабл.П000310000102 = ДанныеПоНадбавке.П000310000302;
	стрТабл.П000310000103 = ДанныеПоНадбавке.П000310000303;
	стрТабл.П000310000104 = ДанныеПоНадбавке.П000310000304;
	стрТабл.П000310000105 = ДанныеПоНадбавке.П000310000305; 
	
	ПараметрыОтчета.ДанныеПоРазделам.Вставить("П0003100001",ТаблНадбавка);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСлужбаСКР;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСлужбаВСКР"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00031");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки, "00004", "00005");

	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ДобавитьСтрокиНадбавкиСотр(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки, ПодразделЧисл = "00002", ПодразделСрПроц = "00003") 
	
	ПолеТабличногоДокумента = ПараметрыДобавленияНадбавки.ПолеТабличногоДокумента;
	Раздел = ПараметрыДобавленияНадбавки.Раздел;
	ПереченьНадбавок = ПараметрыДобавленияНадбавки.ПереченьНадбавок;
	
	ДанныеПоНадбавке = ПараметрыОтчета.Показатели[ПолеТабличногоДокумента];
	ТаблНадбавок = ПараметрыОтчета.ДанныеПоРазделам[Раздел + "00001"];	
	СоставСлужащих = ПараметрыОтчета.СоставСлужащих;
	
	Для Каждого стрСостав Из СоставСлужащих Цикл 
		КодСтроки = стрСостав.КодСтроки; 
		СвойствоСрПроцент = Раздел + "00003" + КодСтроки;
		Если Не ДанныеПоНадбавке.Свойство(СвойствоСрПроцент) Тогда
			Продолжить;
		КонецЕсли;
		ТаблНадбавкиСлуж = ТаблНадбавок.Скопировать(,Раздел + "0000101," + Раздел + "00001" + КодСтроки);
		ЧислСлуж = ДанныеПоНадбавке[Раздел + ПодразделЧисл + КодСтроки];
		срПроцентСлуж = Окр(ДанныеПоНадбавке[Раздел + ПодразделСрПроц + КодСтроки], 2);
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "1");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeTitle");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", ЧислСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "среднПроцентНадбавки_value", срПроцентСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНадбавок_value", ЧислСлуж * срПроцентСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", стрСостав.Наименование);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", стрСостав.Код);
		    ЗаписьJSON.ЗаписатьКонецОбъекта();
			
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
			ЗаписьJSON.ЗаписатьНачалоМассива();
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
					ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
					ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
					ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();			
					ЗаписьJSON.ЗаписатьКонецОбъекта();  
					ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
					ЗаписьJSON.ЗаписатьНачалоМассива();
						ЗаписьJSON.ЗаписатьНачалоОбъекта();
					    	ЗаписатьДанныеПоПроцентамСотр(ЗаписьJSON, ТаблНадбавкиСлуж, ПереченьНадбавок);
						ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьКонецМассива();
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			ЗаписьJSON.ЗаписатьКонецМассива(); 
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();

	КонецЦикла; 	
	
КонецПроцедуры

Процедура ЗаписатьДанныеПоПроцентамСотр(ЗаписьJSON, ТаблНадбавок, ПереченьНадбавок)
	
	КолонкаНадбавка = ТаблНадбавок.Колонки[0].Имя;
	КолонкаКоличество = ТаблНадбавок.Колонки[1].Имя;
	
	УИД_Раздела = Новый УникальныйИдентификатор;
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияРасчет");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Раздела));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет надбавки по должности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeSubTable");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияРасчет");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Детализации = Новый УникальныйИдентификатор;
	    ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		Если ТаблНадбавок.Итог(КолонкаКоличество) > 0 И  ТаблНадбавок.Итог(КолонкаНадбавка) > 0 Тогда
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    	ЗаписьJSON.ЗаписатьНачалоМассива();
			Для Каждого стрЗвание Из ТаблНадбавок Цикл 
				Количество = стрЗвание[КолонкаКоличество];
				Надбавка = стрЗвание[КолонкаНадбавка];
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли; 
				ИмяНадбавки = "";
				КодНадбавки = "";
				Если Надбавка > 0 Тогда
					стрПоиска = ПереченьНадбавок.Найти(Надбавка, "Размер");
					Если стрПоиска <> Неопределено Тогда
						ИмяНадбавки = стрПоиска.Наименование;
						КодНадбавки = стрПоиска.Код;
					КонецЕсли;
				Иначе
					Продолжить;
				КонецЕсли;
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				УИД_Строки = Новый УникальныйИдентификатор;
		    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Строки));
				ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Строки));
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeSubTable");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаИмя_value", ИмяНадбавки);  
						ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаКод_value", КодНадбавки);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "размерНадбавки_value", Надбавка);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "размерНадбавкиИтого_value", Надбавка * Количество);
					ЗаписьJSON.ЗаписатьКонецОбъекта(); 
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;
			ЗаписьJSON.ЗаписатьКонецМассива(); 
		КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива(); 
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаПрочиеСотр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаПрочие =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "30_НадбавкиПрочее");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаПрочие);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: прочие");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000114.RowSurchargeOther");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 19);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);   
	
	// необходимо схлопнуть строки, т.к. в  своде данные попадают из всех отчетов,
	// в результате строки дублируются. Также уберем лишние пробелы и наименование приведем к одному виду
	ВыходнаяТаблицаНадбавок = Новый ТаблицаЗначений;
	ВыходнаяТаблицаНадбавок.Колонки.Добавить("надбавкаИмя_value");
	ВыходнаяТаблицаНадбавок.Колонки.Добавить("СуммаРасхода");
	ВыходнаяТаблицаНадбавок.Колонки.Добавить("СуммаРасходаПрошл");
	
	ТаблицаНадбавокПрочие = ПараметрыОтчета.ДанныеПоРазделам.П0003700001;
    Для Каждого стр Из ТаблицаНадбавокПрочие Цикл 
		Если (ПустаяСтрока(стр.П000370000101)) Или (стр.П000370000102 = 0 И стр.П000370000104 = 0) Тогда
			Продолжить;
		КонецЕсли;
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = СокрЛП(стр.П000370000101);        
		ДлинаИмя = СтрДлина(ИмяНадбавки);
		ИмяНадбавки = ВРег(Лев(ИмяНадбавки, 1)) + НРег(Сред(ИмяНадбавки, 2, ДлинаИмя-1));
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000370000102;
		стрТабл.СуммаРасходаПрошл = стр.П000370000104;
	КонецЦикла; 
	
	ТаблицаНадбавокКомпОтдыхаСотр = ПараметрыОтчета.ДанныеПоРазделам.П0003300001;
	Для Каждого стр Из ТаблицаНадбавокКомпОтдыхаСотр Цикл
		Если (ПустаяСтрока(стр.П000330000101)) Или (стр.П000330000102 = 0 И стр.П000330000104 = 0) Тогда
			Продолжить;
		КонецЕсли;	
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = СокрЛП(стр.П000330000101);        
		ДлинаИмя = СтрДлина(ИмяНадбавки);
		ИмяНадбавки = ВРег(Лев(ИмяНадбавки, 1)) + НРег(Сред(ИмяНадбавки, 2, ДлинаИмя-1));
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000330000102;
		стрТабл.СуммаРасходаПрошл = стр.П000330000104;
	КонецЦикла; 
	
	ТаблицаНадбавокФСБ = ПараметрыОтчета.ДанныеПоРазделам.П0003800001;	
	Для Каждого стр Из ТаблицаНадбавокФСБ Цикл 
		Если (ПустаяСтрока(стр.П000380000101)) Или (стр.П000380000102 = 0 И стр.П000380000102 = 0) Тогда
			Продолжить;
		КонецЕсли;  
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = СокрЛП(стр.П000380000101);        
		ДлинаИмя = СтрДлина(ИмяНадбавки);
		ИмяНадбавки = ВРег(Лев(ИмяНадбавки, 1)) + НРег(Сред(ИмяНадбавки, 2, ДлинаИмя-1));
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000380000102;
		стрТабл.СуммаРасходаПрошл = стр.П000380000104;
	КонецЦикла; 
	
	ТаблицаНадбавокКомпОтпуска = ПараметрыОтчета.ДанныеПоРазделам.П0003900001;	
	Для Каждого стр Из ТаблицаНадбавокКомпОтпуска Цикл 
		Если (ПустаяСтрока(стр.П000390000101)) Или (стр.П000390000102 = 0 И стр.П000390000104 = 0) Тогда
			Продолжить;
		КонецЕсли;  
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = СокрЛП(стр.П000390000101);        
		ДлинаИмя = СтрДлина(ИмяНадбавки);
		ИмяНадбавки = ВРег(Лев(ИмяНадбавки, 1)) + НРег(Сред(ИмяНадбавки, 2, ДлинаИмя-1));
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000390000102;
		стрТабл.СуммаРасходаПрошл = стр.П000390000104;
	КонецЦикла;
	
	ТаблицаНадбавокНочныеПраздничные = ПараметрыОтчета.ДанныеПоРазделам.П0004000001;	
	Для Каждого стр Из ТаблицаНадбавокНочныеПраздничные Цикл
		Если (ПустаяСтрока(стр.П000400000101)) Или (стр.П000400000102 = 0 И стр.П000400000104 = 0) Тогда
			Продолжить;
		КонецЕсли;  
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = СокрЛП(стр.П000400000101);        
		ДлинаИмя = СтрДлина(ИмяНадбавки);
		ИмяНадбавки = ВРег(Лев(ИмяНадбавки, 1)) + НРег(Сред(ИмяНадбавки, 2, ДлинаИмя-1));
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000400000102;
		стрТабл.СуммаРасходаПрошл = стр.П000400000104;
	КонецЦикла;
	
	ВыходнаяТаблицаНадбавок.Свернуть("надбавкаИмя_value", "СуммаРасхода, суммаРасходаПрошл"); 	
	Для Каждого стр Из ВыходнаяТаблицаНадбавок Цикл
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeOther");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаИмя_value", стр.надбавкаИмя_value); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасхода", стр.СуммаРасхода);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасходаПрошл", стр.суммаРасходаПрошл); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
         ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла; 
    		
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры  

Функция ЧисленностьСотрудников(СтруктураПотребность) 
	
	СтруктураЧисленности = Новый Структура;
	СтруктураЧисленности.Вставить("числОфВсего", СтруктураПотребность.П000020000203);
	СтруктураЧисленности.Вставить("числОфВысшие", СтруктураПотребность.П000020000204);
    СтруктураЧисленности.Вставить("числОфСтаршие", СтруктураПотребность.П000020000205);  
  	СтруктураЧисленности.Вставить("числОфСредние", СтруктураПотребность.П000020000206);
    СтруктураЧисленности.Вставить("числМладшие", СтруктураПотребность.П000020000207); 
	СтруктураЧисленности.Вставить("числВсего", СтруктураПотребность.П000020000210);   

	Возврат СтруктураЧисленности;
	
КонецФункции

#КонецОбласти

#Область РасчетЗПГражданские

Процедура ПодготовитьДанныеДляРасчетаЗП(ПараметрыОтчета, ЗаписьJSON)
	
	ЗаписатьНачалоШапкиОтчета(ПараметрыОтчета, ЗаписьJSON);
	
	УИД_Методики = Новый УникальныйИдентификатор;
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Методики)); 
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Методики));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:budgetAllocationMethodic");
	ЗаписьJSON.ЗаписатьИмяСвойства("mixins");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	    ЗаписьJSON.ЗаписатьЗначение("kr:comment");
	ЗаписьJSON.ЗаписатьКонецМассива();
	
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_dataBookName","Потребность в бюджетных ассигнованиях на выплату заработной платы гражданскому персоналу");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_dataBookTemplate","mRG_0000115");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_dataBookTemplateVersion",1);
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_intoRequest",false);
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_obasFormsCode","0000115");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_obasFormsName","Потребность в бюджетных ассигнованиях на выплату заработной платы гражданскому персоналу");
		УИД_Формы = Новый УникальныйИдентификатор;
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_obasFormsUuid",Строка(УИД_Формы));
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_planningMethod","ПМ");
    	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_promiseStatus","Д");
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	    ЗаписьJSON.ЗаписатьНачалоОбъекта();
		    ЗаписатьСвойствоJSON(ЗаписьJSON, "name","pln:sheets");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type","pln:dataSheetsList");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
    			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes"); 
			ЗаписьJSON.ЗаписатьНачалоМассива(); 
				ЗаписатьРазделыОтчетаЗПГражданские(ПараметрыОтчета, ЗаписьJSON);
			ЗаписьJSON.ЗаписатьКонецМассива();
		ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьКонецМассива();
	
	ЗаписатьОкончаниеШапкиОтчета(ЗаписьJSON);

КонецПроцедуры 

Процедура ЗаписатьРазделыОтчетаЗПГражданские(ПараметрыОтчета, ЗаписьJSON)
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьПотребностьЗПГражд(ПараметрыОтчета, ЗаписьJSON);  // Потребность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьЧисленностьЗПГражд(ПараметрыОтчета, ЗаписьJSON);  // Численность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьСредРасходЗПГражд(ПараметрыОтчета, ЗаписьJSON);  // Сред. расход
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьРасчОкладаГражд(ПараметрыОтчета, ЗаписьJSON);  // Расчет окладов
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаЗнаниеЯзыковГражд(ПараметрыОтчета, ЗаписьJSON);  // Надбавка знание языков
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаВодителямЗаКатегориюГражд(ПараметрыОтчета, ЗаписьJSON);  // Водит. категория
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаВодителямПочетноеЗваниеГражд(ПараметрыОтчета, ЗаписьJSON);  // Почет. звание
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаМедицинскаяДеятельностьГражд(ПараметрыОтчета, ЗаписьJSON);  // Мед. деятельность
	ЗаписьJSON.ЗаписатьКонецОбъекта();	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаМедИФармРаботникамГражд(ПараметрыОтчета, ЗаписьJSON);  // Мед. и фарм работники
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаВыслугаЛетГражд(ПараметрыОтчета, ЗаписьJSON);  // Выслуга лет
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаМедСтажГражд(ПараметрыОтчета, ЗаписьJSON);  // Мед. стаж
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаВыполнениеПоказателейГражд(ПараметрыОтчета, ЗаписьJSON);  // Выполнение показателей
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаТяжелыеУсловияГражд(ПараметрыОтчета, ЗаписьJSON);  // Тяжелые условия
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаРукБригадойГражд(ПараметрыОтчета, ЗаписьJSON);  // Руководство бригадой
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаВодителямГражд(ПараметрыОтчета, ЗаписьJSON);  // Водителям
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаСтажГостайнаГражд(ПараметрыОтчета, ЗаписьJSON);  // Стаж гос.тайна
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаГостайнаГражд(ПараметрыОтчета, ЗаписьJSON);  // Гос.тайна
	ЗаписьJSON.ЗаписатьКонецОбъекта();
   	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаРайонныйКоэффициентГражд(ПараметрыОтчета, ЗаписьJSON);  // Районный коэффициент
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаСевернаяГражд(ПараметрыОтчета, ЗаписьJSON);  // Северная
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьРасчетНСНГражд(ПараметрыОтчета, ЗаписьJSON);  // Расчет НСН
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьРасчетНСНДопГражд(ПараметрыОтчета, ЗаписьJSON);  // Расчет НСН Доп
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаПрочиеГражд(ПараметрыОтчета, ЗаписьJSON);  // Прочие
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаполнитьНадбавкаШифрГражд(ПараметрыОтчета, ЗаписьJSON);
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	
КонецПроцедуры

Процедура ЗаполнитьПотребностьЗПГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела = Новый УникальныйИдентификатор;
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "ПотребностьИТОГО");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Раздела));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Потребность в бюджетных ассигнованиях на выплату денежного довольствия военнослужащим");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowTotal");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 1);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
						
	Численность = ЧисленностьГражд(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числДолжФакт = Численность.числДолжФакт;
	числДолжВакант = Численность.числДолжВакант;  
	числДолжВоен = Численность.числДолжВоен;
	
	ТаблицаПотребности = ПараметрыОтчета.ДанныеПоРазделам.П0000100001;
	
	Для Каждого стрПотребность Из ТаблицаПотребности Цикл  
		
		СуммаВсего  = стрПотребность.П000010000106;
		
		Если СуммаВсего = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаФакт = стрПотребность.П000010000103;
		СуммаВакант = стрПотребность.П000010000104; 
		СуммаВоен =  стрПотребность.П000010000105;
			
		срСуммаФакт = ?(числДолжФакт = 0, 0, Окр(СуммаФакт/числДолжФакт/12, 2)); 
		срСуммаВакант =  ?(числДолжВакант = 0, 0, Окр(СуммаВакант/числДолжВакант/12, 2));
		срСуммаВоен = ?(числДолжВоен = 0, 0, Окр(СуммаВоен/числДолжВоен/12, 2));
			
		ВидРасчета = стрПотребность.П000010000101;
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
	   	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    //ЗаписатьСвойствоJSON(ЗаписьJSON, "csr_value", "???");
	            //ЗаписатьСвойствоJSON(ЗаписьJSON, "directionName_value", "???Текущее денежное содержание"); // какие еще могут быть?
	            //ЗаписатьСвойствоJSON(ЗаписьJSON, "direction_value", "???0324");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
	            //ЗаписатьСвойствоJSON(ЗаписьJSON, "grbs_value", "???180");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "osgu_value", "211"); // кроме 211 - что еще может быть
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowTotal");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value","ФЭД");  // ???
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "subject_value","180");   // ???
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "имяРасходов_value", ВидРасчета.Наименование);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "кодРасходов_value", ВидРасчета.Код);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхДолжВакант_value", срСуммаВакант);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхДолжВоен_value", срСуммаВоен);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхДолжФакт_value", срСуммаФакт);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", СуммаВсего);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", СуммаВсего);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", СуммаВсего);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value","0.00");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value","0.00");
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаДолжВакант_value", СуммаВакант);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаДолжВоен_value", СуммаВоен);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаДолжФакт_value", СуммаФакт);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНСНдоп_value", 0);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаПрочие_value", 0);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "числДолжВакант_value", числДолжВакант);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "числДолжВоен_value", числДолжВоен);
	            ЗаписатьСвойствоJSON(ЗаписьJSON, "числДолжФакт_value", числДолжФакт);
	     	ЗаписьJSON.ЗаписатьКонецОбъекта();                   
		ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры   

Процедура ЗаполнитьЧисленностьЗПГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Новый УникальныйИдентификатор;

	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "Численность");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Раздела));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Численность военнослужащих");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowNumByRank");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 2);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
						
	Численность = ЧисленностьГражд(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числДолжФакт = Численность.числДолжФакт;
	числДолжВакант = Численность.числДолжВакант;  
	числДолжВоен = Численность.числДолжВоен;
	числВсего = Численность.числДолжВсего;
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
   		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", Строка(ПараметрыОтчета.КодРаздела));
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "1");  // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowNumByRank");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "имяСтроки_value", "строкаРасчета");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числДолжВакант_value", числДолжВакант);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числДолжВоен_value", числДолжВоен);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числДолжФакт_value", числДолжФакт);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числРасчетнаяИТОГО_value", числВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСреднесписочная_value", числВсего);
            ЗаписьJSON.ЗаписатьКонецОбъекта();                   
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьСредРасходЗПГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "СредниеРасхНа1Работника");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Раздела));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Средние расходы на 1 работника в месяц");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowExpens");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 3);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
							
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
	
	окладДолжФакт = Окр(РасчетОкладов.П000200000204, 2);
	окладДолжВакант = Окр(РасчетОкладов.П000210000204, 2);
	окладДолжВоен = Окр(РасчетОкладов.П000220000204, 2);						 
	
	Численность = ЧисленностьГражд(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числДолжФакт = Численность.числДолжФакт;
	числДолжВакант = Численность.числДолжВакант;  
	числДолжВоен = Численность.числДолжВоен;
	числВсего = Численность.числДолжВсего;
	
	ТаблицаПотребности = ПараметрыОтчета.ДанныеПоРазделам.П0000100001;

	Для Каждого стрПотребность Из ТаблицаПотребности Цикл  
		
		СуммаВсего  = стрПотребность.П000010000106;
		
		Если СуммаВсего = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаТекГод = стрПотребность.П000010000102;
		СуммаФакт = стрПотребность.П000010000103;
		СуммаВакант = стрПотребность.П000010000104; 
		СуммаВоен =  стрПотребность.П000010000105;
			
		срСуммаФакт = ?(числДолжФакт = 0, 0, Окр(СуммаФакт/числДолжФакт/12, 2)); 
		срСуммаВакант =  ?(числДолжВакант = 0, 0, Окр(СуммаВакант/числДолжВакант/12, 2));
		срСуммаВоен = ?(числДолжВоен = 0, 0, Окр(СуммаВоен/числДолжВоен/12, 2));
		срСуммаВсего = срСуммаФакт + срСуммаВакант + срСуммаВоен;
		
		ВидРасчета = стрПотребность.П000010000101;
		
		надбФакт = 0; 
		надбВакант = 0;
		надбВоен = 0;
				
		Если СтрНайти(ВидРасчета.Наименование, "Оклад") = 0 Тогда
			надбФакт = ?(окладДолжФакт = 0, 0, Формат(срСуммаФакт/окладДолжФакт*100, "ЧДЦ=2")); 
			надбВакант = ?(окладДолжВакант = 0, 0, Формат(срСуммаВакант/окладДолжВакант*100, "ЧДЦ=2"));
			надбВоен = ?(окладДолжВоен = 0, 0, Формат(СуммаВоен/окладДолжВоен*100, "ЧДЦ=2"));
		КонецЕсли;
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "alterType_value", "01"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowExpense");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбДолжВакант_value", надбВакант);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбДолжВоен_value", надбВоен);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбДолжФакт_value", надбФакт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "нснКоличДолжВакант_value", 0);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "нснКоличДолжВоен_value", 0);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "нснКоличДолжФакт_value", 0);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "нснСуммаДолжВакант_value", 0);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "нснСуммаДолжВоен_value", 0);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "нснСуммаДолжФакт_value", 0);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжВакант_value", окладДолжВакант);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжВоен_value", окладДолжВоен);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжФакт_value", окладДолжФакт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "расходыИмя_value", ВидРасчета.Наименование);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "расходыКод_value", ВидРасчета.Код);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаДолжВакант_value", срСуммаВакант);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаДолжВоен_value", срСуммаВоен);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаДолжФакт_value", срСуммаФакт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасчетнаяИТОГО_value", срСуммаВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасчетнаяТекГод_value", СуммаТекГод);
			ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		ЗаписьJSON.ЗаписатьКонецОбъекта();		
	КонецЦикла;  
	
	ОформитьПодвалТаблицы(ЗаписьJSON); 						
						
КонецПроцедуры

Процедура ЗаполнитьРасчОкладаГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "РасчетОкладов");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Раздела));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет окладов");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSalary");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 4);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
	
	Численность = ЧисленностьГражд(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числДолжФакт = Численность.числДолжФакт;
	числДолжВакант = Численность.числДолжВакант;  
	числДолжВоен = Численность.числДолжВоен;
	числВсего = Численность.числДолжВсего;
	
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
	
    ОкладыПоДолжФакт = ПараметрыОтчета.ДанныеПоРазделам.П0002000001;		
	ОкладыПоДолжВакант = ПараметрыОтчета.ДанныеПоРазделам.П0002100001;	
	ОкладыПоДолжВоен = ПараметрыОтчета.ДанныеПоРазделам.П0002200001;	
		
	окладДолжФакт = Окр(РасчетОкладов.П000200000204, 2);
	окладДолжВакант = Окр(РасчетОкладов.П000210000204, 2);
	окладДолжВоен = Окр(РасчетОкладов.П000220000204, 2);
	
	ПараметрыСтроки = Новый Структура("Численность, срОкладДолж, Должность, КодДолжности, ОкладыДолж");
	
	// Факт
	ПараметрыСтроки.Численность = числДолжФакт;
	ПараметрыСтроки.срОкладДолж = окладДолжФакт;
	ПараметрыСтроки.Должность = "Работники на должностях, предусмотренные штатом для комплектования гражданским персоналом";
	ПараметрыСтроки.КодДолжности = "010013";  
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжФакт;
	ЗаписатьСтрокуРасчетОкладаГражд(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки); 	
	
	// Вакант 
	ПараметрыСтроки.Численность = числДолжВакант;
	ПараметрыСтроки.срОкладДолж = окладДолжВакант;
	ПараметрыСтроки.Должность = "Вакантные должности, предусмотренные штатом для комплектования гражданским персоналом";
	ПараметрыСтроки.КодДолжности = "010014";
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжВакант;
	ЗаписатьСтрокуРасчетОкладаГражд(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки);
	
	// Воен
	ПараметрыСтроки.Численность = числДолжВоен;
	ПараметрыСтроки.срОкладДолж = окладДолжВоен;
	ПараметрыСтроки.Должность = "Работники на должностях, предусмотренные штатом для комплектования военнослужащими (сотрудниками)";
	ПараметрыСтроки.КодДолжности = "010015";   
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжВоен;
	ЗаписатьСтрокуРасчетОкладаГражд(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки); 	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаписатьСтрокуРасчетОкладаГражд(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки)
	
	окладДолж = ПараметрыСтроки.срОкладДолж;
	Численность = ПараметрыСтроки.Численность;
		
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "4");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", Численность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоКвалВсего_value", Численность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолж * Численность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", ПараметрыСтроки.Должность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", ПараметрыСтроки.КодДолжности);
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	
	
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифамГражд(ЗаписьJSON, ПараметрыСтроки.ОкладыДолж);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
КонецПроцедуры 

Процедура ЗаписатьДанныеПоТарифамГражд(ЗаписьJSON, ОкладыПоДолжностям)
	
	КолонкаДолжность = ОкладыПоДолжностям.Колонки[0].Имя;
	КолонкаОклад = ОкладыПоДолжностям.Колонки[1].Имя;
	КолонкаКоличество = ОкладыПоДолжностям.Колонки[2].Имя;
	
	УИД_Раздела = Строка(Новый УникальныйИдентификатор);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияПоКвал");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Раздела);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет по квал. группе / квал. уровню");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSalarySubTablePost");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияПоКвал");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		Если ОкладыПоДолжностям.Итог(КолонкаКоличество)>0 Тогда
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    	ЗаписьJSON.ЗаписатьНачалоМассива();
			Для Каждого стрТариф Из ОкладыПоДолжностям Цикл 
				Количество = стрТариф[КолонкаКоличество];
				Оклад = стрТариф[КолонкаОклад];  
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				Должность = стрТариф[КолонкаДолжность];
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				УИД_Строки = Строка(Новый УникальныйИдентификатор);
		    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSalarySubTablePost");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "квалИмя_value", Должность.Наименование);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "квалКод_value", Строка(Должность.УникальныйИдентификатор()));
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "оклад_value", Оклад);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаИтого_value", Количество * Оклад);						
					ЗаписьJSON.ЗаписатьКонецОбъекта(); 
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;
			ЗаписьJSON.ЗаписатьКонецМассива();
		КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива();

КонецПроцедуры 

Процедура ЗаполнитьНадбавкаЗнаниеЯзыковГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаИнЯз");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавка за знание иностранного языка");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 5);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокЗаЗнаниеИностранногоГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокЗнаниеЯзыков"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00005");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаВодителямЗаКатегориюГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаВодитКатегория");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавки водителям автомобилей за присвоенную квалификационную категорию и за управление закрепленными за ними автотранспортными средствами категорий «D» («D1») и «DE» («D1E»)");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 6);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокВодителямЗаКатегориюГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокНадбавкаВодителямКвалКатегория"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00006");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаВодителямПочетноеЗваниеГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаПочетЗваниеУчСтепень");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавка за почетное звание/ученую степень");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 7);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокЗаПочетноеЗваниеГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокПочетнойЗвание"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00007");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаМедицинскаяДеятельностьГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаМедицинскуюДеятельность");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавка за медицинскую деятельность");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 55);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокМедицинскаяДеятельностьГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокМедицинскаяДеятельность"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00008");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаМедИФармРаботникамГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаМедРабКвалифКатег");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавка за почетное звание/ученую степень");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 8);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокМедИФармРаботникамГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокМедицинскимРаботникам"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00009");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаВыслугаЛетГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаВыслугаЛет");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Ежемесячная процентная надбавка за непрерывную работу (выслугу лет)");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 9);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокВыслугаЛетГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокВыслугаЛет"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00010");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаМедСтажГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаМедРабСтажНепрерывнРаб");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Ежемесячная надбавка за продолжительность непрерывной работы в медицинских организациях");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 10);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокМедСтажГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокМедицинскимРаботникамНепрерывныйСтаж"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00011");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаВыполнениеПоказателейГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаОбеспечКачИОбъемУслуг");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавка к окладу за обеспечение качества и объема оказываемых организацией услуг (работ)");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 11);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокМедСтажГражд.СкопироватьКолонки();
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокВыполнениеПоказателей"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00012");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры  

Процедура ЗаполнитьНадбавкаТяжелыеУсловияГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаВредТяжелУслТруда");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Выплаты гражданскому персоналу, занятому на тяжелых работах, работах с вредными и (или) опасными и иными особыми условиями труда");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 12);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокЗаРаботуВоВредныхИОпасныхУсловияхГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокТяжелыеУсловияТруда"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00013");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаРукБригадойГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаРукБригадой");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавка за руководство бригадой (звеном)");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 13);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокРуководствоБригадойГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокРуководствоБригадой"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00014");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаВодителямГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаРаботаВУслОтклонОтНорм");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Выплаты за работу в условиях, отклоняющихся от нормальных водителям автомобилей");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 14);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокВодителямГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокНадбавкаВодителям"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00015");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаСтажГостайнаГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаГостайнаСтаж");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавка за стаж работы в структурных подразделениях по защите государственной тайны");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 15);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСтажГостайнаГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСтажГостайны"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00016");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаГостайнаГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаГостайна");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавка за работу со сведениями, составляющими государственную тайну, их засекречиванием и рассекречиванием");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 16);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокГостайнаГражд;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокГостайна"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00017");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаРайонныйКоэффициентГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаРайонныйКт");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Районный коэффициент за работу в подразделениях, расположенных в районах Крайнего Севера," 
												   + " приравненных к ним местностях и других местностях с неблагоприятными климатическими или" 
												   + "экологическими условиями, в том числе отдаленных");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 17);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокРайКоэффициент;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокРайонныйКоэффициент"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00018");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаСевернаяГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаСеверная");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Процентная надбавка за работу в подразделениях, расположенных в районах Крайнего Севера, " 
												   + " приравненных к ним местностях и, других местностях с неблагоприятными климатическими " 
												   + "или экологическими условиями, в том числе отдаленных");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 18);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСеверная;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСевернаяНадбавка"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00019");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки, ПодразделЧисл = "00002", ПодразделСрПроц = "00003") 
	
	ПолеТабличногоДокумента = ПараметрыДобавленияНадбавки.ПолеТабличногоДокумента;
	Раздел = ПараметрыДобавленияНадбавки.Раздел;
	ПереченьНадбавок = ПараметрыДобавленияНадбавки.ПереченьНадбавок;
	
	ДанныеПоНадбавке = ПараметрыОтчета.Показатели[ПолеТабличногоДокумента];
	ТаблНадбавок = ПараметрыОтчета.ДанныеПоРазделам[Раздел + "00001"];	
	СоставСлужащих = ПараметрыОтчета.СоставСлужащих;
	
	Для Каждого стрСостав Из СоставСлужащих Цикл 
		КодСтроки = стрСостав.КодСтроки; 
		СвойствоСрПроцент = Раздел + "00003" + КодСтроки;
		Если Не ДанныеПоНадбавке.Свойство(СвойствоСрПроцент) Тогда
			Продолжить;
		КонецЕсли;
		ТаблНадбавкиСлуж = ТаблНадбавок.Скопировать(,Раздел + "0000101," + Раздел + "00001" + КодСтроки);
		ЧислСлуж = ДанныеПоНадбавке[Раздел + ПодразделЧисл + КодСтроки];
		срПроцентСлуж = Окр(ДанныеПоНадбавке[Раздел + ПодразделСрПроц + КодСтроки], 2);
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeTitle");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", ЧислСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "среднПроцентНадбавки_value", срПроцентСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНадбавок_value", ЧислСлуж * срПроцентСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", стрСостав.Наименование);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", стрСостав.Код);
		    ЗаписьJSON.ЗаписатьКонецОбъекта();
			
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
			ЗаписьJSON.ЗаписатьНачалоМассива();
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
					ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
					ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
					ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();			
					ЗаписьJSON.ЗаписатьКонецОбъекта();  
					ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
					ЗаписьJSON.ЗаписатьНачалоМассива();
						ЗаписьJSON.ЗаписатьНачалоОбъекта();
					    	ЗаписатьДанныеПоПроцентамГражд(ЗаписьJSON, ТаблНадбавкиСлуж, ПереченьНадбавок);
						ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьКонецМассива();
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			ЗаписьJSON.ЗаписатьКонецМассива(); 
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();

	КонецЦикла; 	
	
КонецПроцедуры

Процедура ЗаписатьДанныеПоПроцентамГражд(ЗаписьJSON, ТаблНадбавок, ПереченьНадбавок)
	
	КолонкаНадбавка = ТаблНадбавок.Колонки[0].Имя;
	КолонкаКоличество = ТаблНадбавок.Колонки[1].Имя;
	
	УИД_Раздела = Новый УникальныйИдентификатор;
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияРасчет");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Раздела));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет надбавки по должности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeSubTable");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияРасчет");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Детализации = Новый УникальныйИдентификатор;
	    ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		Если ТаблНадбавок.Итог(КолонкаКоличество) > 0 И  ТаблНадбавок.Итог(КолонкаНадбавка) > 0 Тогда
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    	ЗаписьJSON.ЗаписатьНачалоМассива();
			Для Каждого стрЗвание Из ТаблНадбавок Цикл 
				Количество = стрЗвание[КолонкаКоличество];
				Надбавка = стрЗвание[КолонкаНадбавка];
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли; 
				ИмяНадбавки = "";
				КодНадбавки = "";
				Если Надбавка > 0 Тогда
					стрПоиска = ПереченьНадбавок.Найти(Надбавка, "Размер");
					Если стрПоиска <> Неопределено Тогда
						ИмяНадбавки = стрПоиска.Наименование;
						КодНадбавки = стрПоиска.Код;
					Иначе
						ИмяНадбавки = Надбавка;
						КодНадбавки = XMLСтрока(Формат(Надбавка, "ЧЦ=9; ЧВН="));
					КонецЕсли;
				Иначе
					Продолжить;
				КонецЕсли;
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				УИД_Строки = Новый УникальныйИдентификатор;
		    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Строки));
				ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Строки));
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeSubTable");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаИмя_value", ИмяНадбавки);  
						ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаКод_value", КодНадбавки);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "размерНадбавки_value", Надбавка);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "размерНадбавкиИтого_value", Надбавка * Количество);
					ЗаписьJSON.ЗаписатьКонецОбъекта(); 
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;
			ЗаписьJSON.ЗаписатьКонецМассива(); 
		КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива(); 
	
КонецПроцедуры

Процедура ЗаполнитьРасчетНСНГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "РасчетНСН");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Раздела));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет НСН");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowNSNTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 19);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
	
	РасчетНСН = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетНСН;
	
    ОкладыПоДолжФакт = ПараметрыОтчета.ДанныеПоРазделам.П0002300001;		
	ОкладыПоДолжВакант = ПараметрыОтчета.ДанныеПоРазделам.П0002400001;	
	ОкладыПоДолжВоен = ПараметрыОтчета.ДанныеПоРазделам.П0002500001;	
		
	количОкладовФакт = РасчетНСН.П000230000204;
	количОкладовФакт = РасчетНСН.П000240000204;
	количОкладовВоен = РасчетНСН.П000250000204;
	
	количествоВсегоФакт = РасчетНСН.П000230000203;
	количествоВсегоВакант = РасчетНСН.П000240000203;  
	количествоВсегоВоен = РасчетНСН.П000250000203;
	количествоВсего = количествоВсегоФакт + количествоВсегоВакант + количествоВсегоВоен;
	
	срОкладФакт = РасчетНСН.П000230000302;
	срОкладВакант = РасчетНСН.П000240000302;
	срОкладВоен = РасчетНСН.П000250000302;
	
	срКоличОкладовФакт = РасчетНСН.П000230000304;
	срКоличОкладовВакант = РасчетНСН.П000240000304;
	срКоличОкладовВоен = РасчетНСН.П000250000304;
	
	ПараметрыСтроки = Новый Структура("Численность, срОкладДолж, Должность, КодДолжности, ОкладыДолж, количОкладов, срКоличОкладов");
	
	// Факт
	ПараметрыСтроки.Численность = количествоВсегоФакт;
	ПараметрыСтроки.срОкладДолж = срОкладФакт;
	ПараметрыСтроки.Должность = "Работники на должностях, предусмотренные штатом для комплектования гражданским персоналом";
	ПараметрыСтроки.КодДолжности = "010013";  
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжФакт;
	ПараметрыСтроки.количОкладов = количОкладовФакт;
	ПараметрыСтроки.срКоличОкладов = срКоличОкладовФакт;
	ЗаписатьСтрокуРасчетНСНГражд(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки); 	
	
	// Вакант 
	ПараметрыСтроки.Численность = количествоВсегоВакант;
	ПараметрыСтроки.срОкладДолж = срОкладВакант;
	ПараметрыСтроки.Должность = "Вакантные должности, предусмотренные штатом для комплектования гражданским персоналом";
	ПараметрыСтроки.КодДолжности = "010014";
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжВакант;
	ПараметрыСтроки.количОкладов = количОкладовФакт;
	ПараметрыСтроки.срКоличОкладов = срКоличОкладовВакант;
	ЗаписатьСтрокуРасчетНСНГражд(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки);
	
	// Воен
	ПараметрыСтроки.Численность = количествоВсегоВоен;
	ПараметрыСтроки.срОкладДолж = срОкладВоен;
	ПараметрыСтроки.Должность = "Работники на должностях, предусмотренные штатом для комплектования военнослужащими (сотрудниками)";
	ПараметрыСтроки.КодДолжности = "010015";   
	ПараметрыСтроки.ОкладыДолж = ОкладыПоДолжВоен;
	ПараметрыСтроки.количОкладов = количОкладовВоен;
	ПараметрыСтроки.срКоличОкладов = срКоличОкладовВоен;
	ЗаписатьСтрокуРасчетНСНГражд(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки); 	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаписатьСтрокуРасчетНСНГражд(ПараметрыОтчета, ЗаписьJSON, ПараметрыСтроки)
	
	срОкладДолж = ПараметрыСтроки.срОкладДолж;
	Численность = ПараметрыСтроки.Численность;
	таблОкладыДолж = ПараметрыСтроки.ОкладыДолж;
	количОкладов = ПараметрыСтроки.количОкладов;
	срКоличОкладов = ПараметрыСтроки.срКоличОкладов;
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "010014");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowNSNTitle");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количОкладовНСНВсего_value", количОкладов);
            ЗаписатьСвойствоJSON(ЗаписьJSON, "количСлужВсего_value", Численность);
            ЗаписатьСвойствоJSON(ЗаписьJSON, "количСтрокВДетали_value", таблОкладыДолж.Количество());
            ЗаписатьСвойствоJSON(ЗаписьJSON, "средДолжОклад_value", срОкладДолж);
            ЗаписатьСвойствоJSON(ЗаписьJSON, "средКоличОклНСН_value", срКоличОкладов);
            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
            ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
            ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаДолжОкладовВсего_value", срОкладДолж);
            ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаПотребностиИтого_value", срОкладДолж * Численность);
            ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСредРасходы_value", срОкладДолж);
            ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", ПараметрыСтроки.Должность);
            ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", ПараметрыСтроки.КодДолжности);
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	    
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифамНСНГражд(ЗаписьJSON, таблОкладыДолж);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
КонецПроцедуры 

Процедура ЗаписатьДанныеПоТарифамНСНГражд(ЗаписьJSON, ОкладыПоДолжностям)
	
	КолонкаНомерПП = ОкладыПоДолжностям.Колонки[0].Имя;
	КолонкаОклад = ОкладыПоДолжностям.Колонки[1].Имя;
	КолонкаЧисленность = ОкладыПоДолжностям.Колонки[2].Имя;
	КолонкаКоличествоОкладов = ОкладыПоДолжностям.Колонки[3].Имя;
	
	УИД_Раздела = Строка(Новый УникальныйИдентификатор);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияРасчет");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Раздела);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", "Расчет по должности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowNSNSubTable");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", "детализацияРасчет");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		Если ОкладыПоДолжностям.Итог(КолонкаЧисленность)>0 Тогда
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    	ЗаписьJSON.ЗаписатьНачалоМассива();
			Для Каждого стрТариф Из ОкладыПоДолжностям Цикл 
				Численность = стрТариф[КолонкаЧисленность];
				Оклад = стрТариф[КолонкаОклад];  
				Если Численность = 0 Тогда
					Продолжить;
				КонецЕсли;
				НомерПП = стрТариф[КолонкаНомерПП];
				КоличествоОкладов = стрТариф[КолонкаКоличествоОкладов];
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				УИД_Строки = Строка(Новый УникальныйИдентификатор);
		    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowNSNSubTable");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количОкладовНСН_value", КоличествоОкладов);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количСлуж_value", Численность);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "номПП_value", НомерПП);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "оклад_value", Оклад);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаПотребности_value", Оклад*Численность);						
					ЗаписьJSON.ЗаписатьКонецОбъекта(); 
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;
			ЗаписьJSON.ЗаписатьКонецМассива();
		КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива();

КонецПроцедуры 

Процедура ЗаполнитьРасчетНСНДопГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "РасчетНСНДоп");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет НСН (доп.)");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowNSNadd");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 20);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ТаблицаНадбавок = ПараметрыОтчета.ДанныеПоРазделам.П0002600001;
	
	Для Каждого стр Из ТаблицаНадбавок Цикл
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowNSNadd");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "должностьИмя_value", стр.П000260000102);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "количОклНадбВысокДостиж_value", 0);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "количОклПремияВыпДолжОбяз_value", 0);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "количРаботНижеПрожМин_value", стр.П000260000103);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбВодитКатегория_value", стр.П000260000106);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбВодителям_value", стр.П000260000119);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбВредТяжелУслТруда_value", стр.П000260000115);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбВыпЦелевПоказ_value", стр.П000260000113);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбВыслугаЛет_value", стр.П000260000105);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбГостайна_value", стр.П000260000108);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбГостайнаСтаж_value", стр.П000260000109);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбИнЯз_value", стр.П000260000112);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбМедРабКвалифКатег_value", стр.П000260000107);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбМедРабСтажНепрерывнРаб_value", стр.П000260000116);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбПочетЗваниеУчСтепень_value", стр.П000260000114); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбПрочие_value", стр.П000260000120);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбРайонныйКт_value", стр.П000260000125);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбРукБригадой_value", стр.П000260000118);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбСеверная_value", стр.П000260000126);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбУченСтепень_value", стр.П000260000117);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "номПП_value", стр.П000260000101);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "оклад_value", стр.П000260000104);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "среднемесЗП_value", стр.П000260000122);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаДопПотрДляПрожМин_value", стр.П000260000123);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаДопПотрДляПрожМинРКиСН_value", стр.П000260000127);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаИтого_value", стр.П000260000121);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаМРОТ_value", стр.П000260000124);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаПотребностьИтого_value", "0.00");
			ЗаписьJSON.ЗаписатьКонецОбъекта();
         ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;
		
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаПрочиеГражд(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкиПрочее");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: прочие");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeOther");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 21);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	// необходимо схлопнуть строки, т.к. в  своде данные попадают из всех отчетов,
	// в результате строки дублируются. Также уберем лишние пробелы и наименование приведем к одному виду
	ВыходнаяТаблицаНадбавок = Новый ТаблицаЗначений;
	ВыходнаяТаблицаНадбавок.Колонки.Добавить("надбавкаИмя_value");
	ВыходнаяТаблицаНадбавок.Колонки.Добавить("СуммаРасхода");
	ВыходнаяТаблицаНадбавок.Колонки.Добавить("СуммаРасходаПрошл");

	ТаблицаНадбавокПрочие = ПараметрыОтчета.ДанныеПоРазделам.П0002700001; 	
	Для Каждого стр Из ТаблицаНадбавокПрочие Цикл 
		Если ПустаяСтрока(стр.П000270000101) И стр.П000270000102 = 0 И стр.П000270000104 = 0 Тогда
			Продолжить;
		КонецЕсли;
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = СокрЛП(стр.П000270000101);        
		ДлинаИмя = СтрДлина(ИмяНадбавки);
		ИмяНадбавки = ВРег(Лев(ИмяНадбавки, 1)) + НРег(Сред(ИмяНадбавки, 2, ДлинаИмя-1));
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000270000102;
		стрТабл.СуммаРасходаПрошл = стр.П000270000104;
	КонецЦикла; 
	
	ТаблицаНадбавокРаботаВВыходные = ПараметрыОтчета.ДанныеПоРазделам.П0002800001;	
	Для Каждого стр Из ТаблицаНадбавокРаботаВВыходные Цикл
		Если  ПустаяСтрока(стр.П000280000101) И стр.П000280000102 = 0 И стр.П000280000103 = 0 Тогда
			Продолжить;
		КонецЕсли;
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = СокрЛП(стр.П000280000101);        
		ДлинаИмя = СтрДлина(ИмяНадбавки);
		ИмяНадбавки = ВРег(Лев(ИмяНадбавки, 1)) + НРег(Сред(ИмяНадбавки, 2, ДлинаИмя-1));
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000280000102;
		стрТабл.СуммаРасходаПрошл = стр.П000280000103;
	КонецЦикла;	 
	
	ТаблицаНадбавокКомпенсацияОтпуска = ПараметрыОтчета.ДанныеПоРазделам.П0002900001;	
	Для Каждого стр Из ТаблицаНадбавокКомпенсацияОтпуска Цикл
		Если стр.П000290000101 = 0 И стр.П000290000102 = 0 Тогда
			Продолжить;
		КонецЕсли;
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = "Компенсация отпуска";        
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000290000101;
		стрТабл.СуммаРасходаПрошл = стр.П000290000102;
	КонецЦикла;  
	
	ТаблицаНадбавокНеНормальныеУсловияТруда = ПараметрыОтчета.ДанныеПоРазделам.П0003000001;
	Для Каждого стр Из ТаблицаНадбавокНеНормальныеУсловияТруда Цикл
		Если ПустаяСтрока(стр.П000300000101) И стр.П000300000102 = 0 И стр.П000300000103 = 0 Тогда
			Продолжить;
		КонецЕсли;
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = СокрЛП(стр.П000300000101);        
		ДлинаИмя = СтрДлина(ИмяНадбавки);
		ИмяНадбавки = ВРег(Лев(ИмяНадбавки, 1)) + НРег(Сред(ИмяНадбавки, 2, ДлинаИмя-1));
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000300000102;
		стрТабл.СуммаРасходаПрошл = стр.П000300000103;
	КонецЦикла; 
	
	ТаблицаНадбавокСовмещение = ПараметрыОтчета.ДанныеПоРазделам.П0003100001; 
	Для Каждого стр Из ТаблицаНадбавокСовмещение Цикл 
		Если ПустаяСтрока(стр.П000310000101) И стр.П000310000102 = 0 И стр.П000310000103 = 0 Тогда
			Продолжить;
		КонецЕсли;
		стрТабл = ВыходнаяТаблицаНадбавок.Добавить();
		ИмяНадбавки = СокрЛП(стр.П000310000101);        
		ДлинаИмя = СтрДлина(ИмяНадбавки);
		ИмяНадбавки = ВРег(Лев(ИмяНадбавки, 1)) + НРег(Сред(ИмяНадбавки, 2, ДлинаИмя-1));
		стрТабл.надбавкаИмя_value = ИмяНадбавки;
		стрТабл.СуммаРасхода = стр.П000310000102;
		стрТабл.СуммаРасходаПрошл = стр.П000310000103;
	КонецЦикла;
	
	ВыходнаяТаблицаНадбавок.Свернуть("надбавкаИмя_value", "СуммаРасхода, суммаРасходаПрошл"); 
	
	Для Каждого стр Из ВыходнаяТаблицаНадбавок Цикл
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_code", "0");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000115.RowSurchargeOther");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаИмя_value", стр.надбавкаИмя_value); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасхода", стр.СуммаРасхода);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасходаПрошл", стр.суммаРасходаПрошл); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "типНадбавкиИмя_value", "Прочие");
			ЗаписьJSON.ЗаписатьКонецОбъекта();
         ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла; 	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаШифрГражд(ПараметрыОтчета, ЗаписьJSON)
	
	Если ПараметрыОтчета.ПеречниНадбавок.Свойство("ПолеТабличногоДокументаРасчетНадбавокШифры") Тогда
		УИД_Раздела =  Строка(Новый УникальныйИдентификатор);
	    ПараметрыЗаголовкаТаблицы = Новый Структура;
		ПараметрыЗаголовкаТаблицы.Вставить("name",  "НадбавкаШифр");
		ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_Раздела);
		ПараметрыЗаголовкаТаблицы.Вставить("caption", "Надбавка шифр");
		ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
		ПараметрыЗаголовкаТаблицы.Вставить("order", 26); 
		ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "");

		ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
		
		ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокШифрГражд;
		
		ПараметрыДобавленияНадбавки = Новый Структура;
		ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокШифры"); 
		ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00036");
		ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
		
		ДобавитьСтрокиНадбавкиГражд(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
		
		ОформитьПодвалТаблицы(ЗаписьJSON); 
	КонецЕсли;
	
КонецПроцедуры

Функция ЧисленностьГражд(СтруктураПотребность) 
	
	СтруктураЧисленности = Новый Структура;
	СтруктураЧисленности.Вставить("числДолжФакт", СтруктураПотребность.П000020000203);
	СтруктураЧисленности.Вставить("числДолжВакант", СтруктураПотребность.П000020000204);
    СтруктураЧисленности.Вставить("числДолжВоен", СтруктураПотребность.П000020000205);  
  	СтруктураЧисленности.Вставить("числДолжВсего", СтруктураПотребность.П000020000206); 
	
	Возврат СтруктураЧисленности;
	
КонецФункции

#КонецОбласти

#Область ДобавлениеСтрокВСостав

Процедура ЗаполнитьСоставВоенный(СоставСлужащих)
    ДобавитьВСоставСтрокуВысшОфицеры(СоставСлужащих);
	ДобавитьВСоставСтрокуСтарОфицеры(СоставСлужащих);
	ДобавитьВСоставСтрокуМладОфицеры(СоставСлужащих);
	ДобавитьВСоставСтрокуПрапорщики(СоставСлужащих);
	ДобавитьВСоставСтрокуСолдаты(СоставСлужащих);
	ДобавитьВСоставСтрокуКонтракт(СоставСлужащих);
	ДобавитьВСоставСтрокуПризыв(СоставСлужащих);
	ДобавитьВСоставСтрокуДоКонтракта(СоставСлужащих);	
КонецПроцедуры 

Процедура ЗаполнитьСоставСотрудники(СоставСлужащих)
    ДобавитьВСоставСтрокуВысшийСостав(СоставСлужащих);
	ДобавитьВСоставСтрокуСтаршийСостав(СоставСлужащих);
	ДобавитьВСоставСтрокуСреднийСостав(СоставСлужащих);
	ДобавитьВСоставСтрокуМладшийСостав(СоставСлужащих);	
КонецПроцедуры 

Процедура ЗаполнитьСоставГражданские(СоставСлужащих)
    ДобавитьВСоставСтрокуГражданскиеФакт(СоставСлужащих);
	ДобавитьВСоставСтрокуГражданскиеВакант(СоставСлужащих);
	ДобавитьВСоставСтрокуГражданскиеВоен(СоставСлужащих);	
КонецПроцедуры 

Процедура ДобавитьВСоставСтрокуВысшОфицеры(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010001";
	стрСостав.КодСтроки = "02";
	стрСостав.Наименование = "Высшие офицеры";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуСтарОфицеры(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010002"; 
	стрСостав.КодСтроки = "03";
	стрСостав.Наименование = "Старшие офицеры";
КонецПроцедуры 

Процедура ДобавитьВСоставСтрокуМладОфицеры(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010003";  
	стрСостав.КодСтроки = "04";
	стрСостав.Наименование = "Младшие офицеры";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуПрапорщики(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010004";
	стрСостав.КодСтроки = "05";
	стрСостав.Наименование = "Прапорщики";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуСолдаты(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010005"; 
	стрСостав.КодСтроки = "06";
	стрСостав.Наименование = "Сержанты, старшины, солдаты, матросы по контракту";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуКонтракт(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010006";
	стрСостав.КодСтроки = "07";
	стрСостав.Наименование = "Курсанты по контракту";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуПризыв(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010007";  
	стрСостав.КодСтроки = "08";
	стрСостав.Наименование = "Военнослужащие по призыву";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуДоКонтракта(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010008";  
	стрСостав.КодСтроки = "09";
	стрСостав.Наименование = "Курсанты до контракта";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуВысшийСостав(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010009";  
	стрСостав.КодСтроки = "02";
	стрСостав.Наименование = "Высший начальствующий состав";
КонецПроцедуры 

Процедура ДобавитьВСоставСтрокуСтаршийСостав(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010010";  
	стрСостав.КодСтроки = "03";
	стрСостав.Наименование = "Старший начальствующий состав";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуСреднийСостав(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010011";  
	стрСостав.КодСтроки = "04";
	стрСостав.Наименование = "Средний начальствующий состав";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуМладшийСостав(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010012";  
	стрСостав.КодСтроки = "05";
	стрСостав.Наименование = "Младший начальствущий и рядовой состав";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуГражданскиеФакт(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010013";  
	стрСостав.КодСтроки = "02";
	стрСостав.Наименование = "Работники на должностях, предусмотренные штатом для комплектования гражданским персоналом";
КонецПроцедуры 

Процедура ДобавитьВСоставСтрокуГражданскиеВакант(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010014";  
	стрСостав.КодСтроки = "03";
	стрСостав.Наименование = "Вакантные должности, предусмотренные штатом для комплектования гражданским персоналом";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуГражданскиеВоен(СоставСлужащих)
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010015";  
	стрСостав.КодСтроки = "04";
	стрСостав.Наименование = "Работники на должностях, предусмотренные штатом для комплектования военнослужащими (сотрудниками)";
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыЗаписиJSON

Процедура ЗаписатьНачалоШапкиОтчета(ПараметрыОтчета, ЗаписьJSON)
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	
	ЗаписатьСвойствоJSON(ЗаписьJSON, "formatVersion", 1);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "repository", "planning-data");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "workspace", ""); // ???
	ЗаписатьСвойствоJSON(ЗаписьJSON, "path", "");     // ???
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "11");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(ПараметрыОтчета.Документ.УникальныйИдентификатор()));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:budgetAllocations"); 
	
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
	
	ЗаписатьСвойствоJSON(ЗаписьJSON, "kr_stage", "CREATE");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_alterTypeCode", ""); // ???
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_alterTypeUuid", "");  // ???
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_changeCalculation", false);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_docCode", Строка(ПараметрыОтчета.Документ.Номер));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_docDate", Строка(Формат(ПараметрыОтчета.Документ.Дата, "ДФ=dd.MM.yyyy")));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_docName", "Тест");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_docYear", Лев(ПараметрыОтчета.Период, 4));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_docYearCount", 1);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_fkrCode", Строка(ПараметрыОтчета.Раздел.Код));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_fkrUuid", Строка(ПараметрыОтчета.Раздел.УникальныйИдентификатор()));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_ownerCode", Строка(ПараметрыОтчета.Организация.Код));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_ownerName", Строка(ПараметрыОтчета.Организация.Наименование));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_ownerUuid", Строка(ПараметрыОтчета.Организация.УникальныйИдентификатор()));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_INN", Строка(ПараметрыОтчета.Организация.ИНН));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_KPP", Строка(ПараметрыОтчета.Организация.КПП));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_periodType", "YEAR");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_stageCode", "");  // ???
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_stageIsMinor", false);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_stageName", "");  // ???
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_stageNeedControl", false);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_stageUuid", "");  // ???
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_subekrCode", "");  // ???
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_subekrUuid", "");  // ???
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_vrCode", Строка(ПараметрыОтчета.ВидРасходов.Код));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_vrUuid", Строка(ПараметрыОтчета.ВидРасходов.УникальныйИдентификатор()));
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();  
	
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:baMethodics");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:budgetAllocationsMethodicList");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();

КонецПроцедуры 
				
Процедура ЗаписатьОкончаниеШапкиОтчета(ЗаписьJSON)
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьКонецМассива(); 	
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();

КонецПроцедуры

Процедура ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовка)
	
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", ПараметрыЗаголовка.name);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", ПараметрыЗаголовка.id);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();	
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_caption", ПараметрыЗаголовка.caption);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_defaultRowType", ПараметрыЗаголовка.defaultRowType);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_hideCode", ПараметрыЗаголовка.hideCode);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_name", ПараметрыЗаголовка.name);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln_order", ПараметрыЗаголовка.order); 
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
			ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:rows");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookRowsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
					ЗаписьJSON.ЗаписатьКонецОбъекта();
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
			ЗаписьJSON.ЗаписатьНачалоМассива();	 
					
КонецПроцедуры  

Процедура ОформитьПодвалТаблицы(ЗаписьJSON)
	
	ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
КонецПроцедуры

Процедура ЗаписатьСвойствоJSON(Запись, ИмяСвойства, Значение)
	Запись.ЗаписатьИмяСвойства(ИмяСвойства);
	Запись.ЗаписатьЗначение(Значение);
КонецПроцедуры

#КонецОбласти