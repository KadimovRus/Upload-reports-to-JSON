Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	
	ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");
	ПараметрыРегистрации.Вставить("Наименование", "Выгрузка регл отчетности");
	
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	
	ПараметрыРегистрации.Вставить("Версия", "1.0");    
	ПараметрыРегистрации.Вставить("Информация", "Выгрузка регл отчетности");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	ДобавитьКоманду(ТаблицаКоманд, "Выгрузка регл отчетности", "ВыгрузкаРеглОтчетности", "ОткрытиеФормы", Истина, "");
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()

   Команды = Новый ТаблицаЗначений;
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры

Функция РезультатПреобразования(ПараметрыОтчета) Экспорт
	
	ЗаписьJSON = Новый ЗаписьJSON; 
	ЗаписьJSON.ПроверятьСтруктуру = Ложь;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(, Символы.Таб);
	ИмяФайла = ПолучитьИмяВременногоФайла("json");
	ЗаписьJSON.ОткрытьФайл(ИмяФайла, , , ПараметрыЗаписиJSON);
	
	ВидОтчета = ПараметрыОтчета.ВидОтчета; 
	
	Если ПараметрыОтчета.ВидОтчета = "001001" Тогда
		ПодготовитьДанныеДляРасчетаДДВоен(ПараметрыОтчета, ЗаписьJSON);	
	ИначеЕсли ПараметрыОтчета.ВидОтчета = "001002" Тогда
        ПодготовитьДанныеДляРасчетаДДСотр(ПараметрыОтчета, ЗаписьJSON);	
	ИначеЕсли  ПараметрыОтчета.ВидОтчета = "001003" Тогда
        ПодготовитьДанныеДляРасчетаЗП(ПараметрыОтчета, ЗаписьJSON);		
	КонецЕсли;
	
	ЗаписьJSON.Закрыть(); 
	
	Адрес  = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла), АдресВременногоХранилища);
	Возврат  Адрес;	
	
КонецФункции   

Процедура ПодготовитьДанныеДляРасчетаДДВоен(ПараметрыОтчета, ЗаписьJSON)
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	
		ЗаписатьСвойствоJSON(ЗаписьJSON, "formatVersion", 1);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "repository", "planning-data");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "workspace", ""); // ???
		ЗаписатьСвойствоJSON(ЗаписьJSON, "path", "");     // ???
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "11");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(ПараметрыОтчета.Документ.УникальныйИдентификатор()));
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:budgetAllocations"); 
		
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		
			ЗаписатьСвойствоJSON(ЗаписьJSON, "kr:stage", "CREATE");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:alterTypeCode", ""); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:alterTypeUuid", "");  // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:changeCalculation", false);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:docCode", Строка(ПараметрыОтчета.Документ.Номер));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:docDate", Строка(Формат(ПараметрыОтчета.Документ.Дата, "ДФ=dd.MM.yyyy")));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:docName", "Тест");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:docYear", Лев(ПараметрыОтчета.Период, 4));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:docYearCount", 1);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:fkrCode", Строка(ПараметрыОтчета.Раздел.Код));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:fkrUuid", Строка(ПараметрыОтчета.Раздел.УникальныйИдентификатор()));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:ownerCode", Строка(ПараметрыОтчета.Организация.Код));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:ownerName", Строка(ПараметрыОтчета.Организация.Наименование));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:ownerUuid", Строка(ПараметрыОтчета.Организация.УникальныйИдентификатор()));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:INN", Строка(ПараметрыОтчета.Организация.ИНН));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:KPP", Строка(ПараметрыОтчета.Организация.КПП));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:periodType", "YEAR");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:stageCode", "");  // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:stageIsMinor", false);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:stageName", "");  // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:stageNeedControl", false);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:stageUuid", "");  // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:subekrCode", "");  // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:subekrUuid", "");  // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:vrCode", Строка(ПараметрыОтчета.ВидРасходов.Код));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:vrUuid", Строка(ПараметрыОтчета.ВидРасходов.УникальныйИдентификатор()));

		ЗаписьJSON.ЗаписатьКонецОбъекта();  
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    ЗаписьJSON.ЗаписатьНачалоМассива();
			//ЗаписьJSON.ЗаписатьНачалоОбъекта();
			//    ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "kr:signs");
			//    ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "kr:signs");
			//	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			//		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			//		ЗаписьJSON.ЗаписатьКонецОбъекта();
			//ЗаписьJSON.ЗаписатьКонецОбъекта();
			
			ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:baMethodics");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:budgetAllocationsMethodicList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
               	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
					    УИД_Методики = Новый УникальныйИдентификатор;
						ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Методики)); 
						ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Методики));
                		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:budgetAllocationMethodic");
						ЗаписьJSON.ЗаписатьИмяСвойства("mixins");
						ЗаписьJSON.ЗаписатьНачалоМассива();
						    ЗаписьJSON.ЗаписатьЗначение("kr:comment");
						ЗаписьJSON.ЗаписатьКонецМассива();
						
						ЗаписьJSON.ЗаписатьИмяСвойства("properties");
                        ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
							ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:dataBookName","Расчет потребности в бюджетных ассигнованиях на выплату денежного довольствия военнослужащим");
                        	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:dataBookTemplate","mRG_0000113");
                        	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:dataBookTemplateVersion",1);
                        	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:intoRequest",false);
                        	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:obasFormsCode","0000113");
                        	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:obasFormsName","Расчет потребности в бюджетных ассигнованиях на выплату денежного довольствия военнослужащим");
							УИД_Формы = Новый УникальныйИдентификатор;
                        	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:obasFormsUuid",Строка(УИД_Формы));
                        	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:planningMethod","ПМ");
                        	ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:promiseStatus","Д");
						ЗаписьJSON.ЗаписатьКонецОбъекта();
						ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
						ЗаписьJSON.ЗаписатьНачалоМассива();
						    ЗаписьJSON.ЗаписатьНачалоОбъекта();
							    ЗаписатьСвойствоJSON(ЗаписьJSON, "name","pln:sheets");
								ЗаписатьСвойствоJSON(ЗаписьJSON, "type","pln:dataSheetsList");
								ЗаписьJSON.ЗаписатьИмяСвойства("properties");
                        			ЗаписьJSON.ЗаписатьНачалоОбъекта();
									ЗаписьJSON.ЗаписатьКонецОбъекта();
								ЗаписьJSON.ЗаписатьИмяСвойства("nodes"); 
								ЗаписьJSON.ЗаписатьНачалоМассива(); 
									ЗаписатьРазделыОтчета(ПараметрыОтчета, ЗаписьJSON);
								ЗаписьJSON.ЗаписатьКонецМассива();
							ЗаписьJSON.ЗаписатьКонецОбъекта();
						ЗаписьJSON.ЗаписатьКонецМассива();
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				 ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 	
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();

КонецПроцедуры 

Процедура ЗаписатьРазделыОтчета(ПараметрыОтчета, ЗаписьJSON)
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьПотребностьВоен(ПараметрыОтчета, ЗаписьJSON);  // Потребность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьЧисленностьВоен(ПараметрыОтчета, ЗаписьJSON);  // Численность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьСредРасходВоен(ПараметрыОтчета, ЗаписьJSON);  // Сред. расход
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьРасчОклада1Воен(ПараметрыОтчета, ЗаписьJSON);  // Расчет оклада 1
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьРасчОклада2Воен(ПараметрыОтчета, ЗаписьJSON);  // Расчет оклада 2
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьУвеличОкладВоен(ПараметрыОтчета, ЗаписьJSON);  // Увелич оклада
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаВыслугаЛетВоен(ПараметрыОтчета, ЗаписьJSON);  // Выслуга лет
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаКлассностьВоен(ПараметрыОтчета, ЗаписьJSON);  // Классность
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаГостайнаВоен(ПараметрыОтчета, ЗаписьJSON);  // Гостайна
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаОсобыеУсловия(ПараметрыОтчета, ЗаписьJSON);  // Особые условия
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаПоощрительныеВыплаты(ПараметрыОтчета, ЗаписьJSON);  // Поощрительные выплаты
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаРайонныйКоэффициент(ПараметрыОтчета, ЗаписьJSON);  // Районный коэффициент
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	    ЗаполнитьНадбавкаСеверная(ПараметрыОтчета, ЗаписьJSON);  // Северная
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	//ЗаписьJSON.ЗаписатьНачалоОбъекта();
	//    ЗаполнитьНадбавкаЮридическая(ПараметрыОтчета, ЗаписьJSON);  // Юридическая
	//ЗаписьJSON.ЗаписатьКонецОбъекта();
	//ЗаписьJSON.ЗаписатьНачалоОбъекта();
	//    ЗаполнитьНадбавкаГостайнаСтаж(ПараметрыОтчета, ЗаписьJSON);  // Стаж гостайна
	//ЗаписьJSON.ЗаписатьКонецОбъекта();
	//ЗаписьJSON.ЗаписатьНачалоОбъекта();
	//    ЗаполнитьНадбавкаШифр(ПараметрыОтчета, ЗаписьJSON);  // Стаж гостайна
	//ЗаписьJSON.ЗаписатьКонецОбъекта();
	//ЗаписьJSON.ЗаписатьНачалоОбъекта();
	//    ЗаполнитьНадбавкаСКР(ПараметрыОтчета, ЗаписьJSON);  // СКР
	//ЗаписьJSON.ЗаписатьКонецОбъекта();
	//ЗаписьJSON.ЗаписатьНачалоОбъекта();
	//	ЗаписатьНадбавкаДоплатаЗаРиск(ПараметрыОтчета, ЗаписьJSON);  // Надбавка за риск
	//ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьНадбавкаФСБ(ПараметрыОтчета, ЗаписьJSON);  // Надбавка ФСБ
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьНадбавкаПрочие(ПараметрыОтчета, ЗаписьJSON);  // Надбавка Прочие
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
КонецПроцедуры

Процедура ЗаполнитьПотребностьВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Потребность =  Новый УникальныйИдентификатор;
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "01_ПотребностьИТОГО");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Потребность));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Потребность в бюджетных ассигнованиях на выплату денежного довольствия военнослужащим");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowTotal");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 1);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
						
	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьСотрудников.числОфВысшие;
	числОфСтаршие = ЧисленностьСотрудников.числОфСтаршие;  
	числОфМладшие = ЧисленностьСотрудников.числОфМладшие;
	числПрапорщики = ЧисленностьСотрудников.числПрапорщики;
	числСолдаты = ЧисленностьСотрудников.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьСотрудников.числКурсантыКонтракт;
	числКурсантыДоКонтракта = ЧисленностьСотрудников.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьСотрудников.числСлужПоПризыву;
	числВсего = ЧисленностьСотрудников.числВсего;
	ТаблицаПотребности = ПараметрыОтчета.ДанныеПоРазделам.П0000100001;
	
	Для Каждого стрПотребность Из ТаблицаПотребности Цикл  
		
		СуммаВсего  = стрПотребность.П000010000113;
		
		Если СуммаВсего = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаВсегоОфицеры = стрПотребность.П000010000103;
		СуммаОфВысшие = стрПотребность.П000010000104; 
		СуммаОфСтаршие =  стрПотребность.П000010000105;
		СуммаОфМладшие = стрПотребность.П000010000106;
		СуммаПрапорщики = стрПотребность.П000010000107;
		СуммаСолдаты = стрПотребность.П000010000108;
		СуммаПоКонтракту = стрПотребность.П000010000109;
		СуммаДоКонтракта = стрПотребность.П000010000110;
		СуммаПоПризыву = стрПотребность.П000010000111;							 
		
		срСуммаОфВысшие = ?(числОфВысшие = 0, 0, Окр(СуммаОфВысшие/числОфВысшие/12, 2)); 
		срСуммаОфСтаршие =  ?(числОфСтаршие = 0, 0, Окр(СуммаОфСтаршие/числОфСтаршие/12, 2));
		срСуммаОфМладшие = ?(числОфМладшие = 0, 0, Окр(СуммаОфМладшие/числОфМладшие/12, 2));
		срСуммаПрапорщики = ?(числПрапорщики = 0, 0, Окр(СуммаПрапорщики/числПрапорщики/12, 2));
		срСуммаСолдаты = ?(числСолдаты = 0, 0, Окр(СуммаСолдаты/числСолдаты/12, 2));
		срСуммаПоКонтракту = ?(числКурсантыКонтракт = 0, 0, Окр(СуммаПоКонтракту/числКурсантыКонтракт/12, 2));
		срСуммаДоКонтракта = ?(числКурсантыДоКонтракта = 0, 0, Окр(СуммаДоКонтракта/числКурсантыДоКонтракта/12, 2));
		срСуммаПоПризыву = ?(числСлужПоПризыву = 0, 0, Окр(СуммаПоПризыву/числСлужПоПризыву/12, 2));
								
		ВидРасчета = стрПотребность.П000010000101;
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
   		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    //ЗаписатьСвойствоJSON(ЗаписьJSON, "csr_value", "???");
                //ЗаписатьСвойствоJSON(ЗаписьJSON, "directionName_value", "???Текущее денежное содержание"); // какие еще могут быть?
                //ЗаписатьСвойствоJSON(ЗаписьJSON, "direction_value", "???0324");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
                //ЗаписатьСвойствоJSON(ЗаписьJSON, "grbs_value", "???180");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "osgu_value", "211"); // кроме 211 - что еще может быть
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "2");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowTotal");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value","ФЭД");  // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "subject_value","180");   // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "имяРасходов_value", ВидРасчета.Наименование);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "кодРасходов_value", ВидРасчета.Код);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхКурсантыДоКонтракта_value", срСуммаДоКонтракта);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхКурсантыКонтракт_value", срСуммаПоКонтракту);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхОфВысшие_value", срСуммаОфВысшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхОфМладшие_value", срСуммаОфМладшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхОфСтаршие_value", срСуммаОфСтаршие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхПрапорщики_value", срСуммаПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхСлужПоПризыву_value", срСуммаПоПризыву);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "срРасхСолдаты_value", срСуммаСолдаты);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", СуммаВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", СуммаВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", СуммаВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value","0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value","0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаКурсантыДоКонтракта_value", СуммаДоКонтракта);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаКурсантыКонтракт_value", СуммаПоКонтракту);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНадбавкиПрочие_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНадбавкиФСБ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВСЕГО_value", СуммаВсегоОфицеры);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВысшие_value", СуммаОфВысшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфМладшие_value", СуммаОфМладшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфСтаршие_value", СуммаОфСтаршие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаПрапорщики_value", СуммаПрапорщики);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСлужПоПризыву_value", СуммаПоПризыву);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСолдаты_value", СуммаСолдаты);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числКурсантыДоКонтракта_value", числКурсантыДоКонтракта);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числКурсантыКонтракт_value", числКурсантыКонтракт);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфВысшие_value", числОфВысшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфМладшие_value", числОфМладшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфСтаршие_value", числОфСтаршие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числПрапорщики_value", числПрапорщики);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСлужПоПризыву_value", числСлужПоПризыву);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСолдаты_value", числСолдаты);
			ЗаписьJSON.ЗаписатьКонецОбъекта();                   
		ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры   

Процедура ЗаполнитьЧисленностьВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_Численность =  Новый УникальныйИдентификатор;

	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "02_Численность");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_Численность));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Численность военнослужащих");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowNumByRank");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 2);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
						
	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВсего = ЧисленностьСотрудников.числОфВсего;
	числОфВысшие = ЧисленностьСотрудников.числОфВысшие;
	числОфСтаршие = ЧисленностьСотрудников.числОфСтаршие;  
	числОфМладшие = ЧисленностьСотрудников.числОфМладшие;
	числПрапорщики = ЧисленностьСотрудников.числПрапорщики;
	числСолдаты = ЧисленностьСотрудников.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьСотрудников.числКурсантыКонтракт;
	числКурсантыДоКонтракта = ЧисленностьСотрудников.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьСотрудников.числСлужПоПризыву;
	числВсего = ЧисленностьСотрудников.числВсего;
	ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
   		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", Строка(ПараметрыОтчета.КодРаздела));
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "1");  // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowNumByRank");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
                ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "имяСтроки_value", "строкаРасчета");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числКурсантыДоКонтракта_value", числКурсантыДоКонтракта);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числКурсантыКонтракт_value", числКурсантыКонтракт);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфВСЕГО_value", числОфВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфВысшие_value", числОфВысшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфМладшие_value", числОфМладшие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числОфСтаршие_value", числОфСтаршие);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числПрапорщики_value", числПрапорщики);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числРасчетнаяИТОГО_value", числВсего);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСлужПоПризыву_value", числСлужПоПризыву);
                ЗаписатьСвойствоJSON(ЗаписьJSON, "числСолдаты_value", числСолдаты);
			ЗаписьJSON.ЗаписатьКонецОбъекта();                   
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьСредРасходВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_СредРасход =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "03_СредниеРасхНа1Воен");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_СредРасход));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Средние расходы на содержание 1 военнослужащего в месяц");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowExpens");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 3);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
							
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
	
	окладДолжОфВысшие = Окр(РасчетОкладов.П000040000204, 2);
	окладДолжОфСтаршие = Окр(РасчетОкладов.П000060000204, 2);
	окладДолжОфМладшие = Окр(РасчетОкладов.П000080000204, 2);						 
	окладДолжПрапорщики = Окр(РасчетОкладов.П000100000204, 2);						 
	окладДолжСолдаты = Окр(РасчетОкладов.П000120000204, 2); 
	окладДолжКурсантыКонтракт = Окр(РасчетОкладов.П000140000204, 2);  
	окладДолжКурсантыДоКонтракта = Окр(РасчетОкладов.П000160000204, 2);
	окладДолжСлужПоПризыву = 0;    					

	окладЗванОфВысшие = Окр(РасчетОкладов.П000050000204, 2);
	окладЗванОфМладшие = Окр(РасчетОкладов.П000070000204, 2); 
	окладЗванОфСтаршие = Окр(РасчетОкладов.П000090000204, 2); 
	окладЗванПрапорщики = Окр(РасчетОкладов.П000110000204, 2); 
	окладЗванСолдаты = Окр(РасчетОкладов.П000130000204, 2);
	окладЗванКурсантыКонтракт = Окр(РасчетОкладов.П000150000204, 2);

	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьСотрудников.числОфВысшие;
	числОфСтаршие = ЧисленностьСотрудников.числОфСтаршие;  
	числОфМладшие = ЧисленностьСотрудников.числОфМладшие;
	числПрапорщики = ЧисленностьСотрудников.числПрапорщики;
	числСолдаты = ЧисленностьСотрудников.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьСотрудников.числКурсантыКонтракт;
	числКурсантыДоКонтракта = ЧисленностьСотрудников.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьСотрудников.числСлужПоПризыву;
	числВсего = ЧисленностьСотрудников.числВсего;
	ТаблицаПотребности = ПараметрыОтчета.ДанныеПоРазделам.П0000100001;

	Для Каждого стрПотребность Из ТаблицаПотребности Цикл  
		
		СуммаВсего  = стрПотребность.П000010000113;
		
		Если СуммаВсего = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаВсегоОфицеры = стрПотребность.П000010000103;
		СуммаОфВысшие = стрПотребность.П000010000104; 
		СуммаОфСтаршие =  стрПотребность.П000010000105;
		СуммаОфМладшие = стрПотребность.П000010000106;
		СуммаПрапорщики = стрПотребность.П000010000107;
		СуммаСолдаты = стрПотребность.П000010000108;
		СуммаПоКонтракту = стрПотребность.П000010000109;
		СуммаДоКонтракта = стрПотребность.П000010000110;
		СуммаПоПризыву = стрПотребность.П000010000111;							 
		
		срСуммаОфВысшие = ?(числОфВысшие = 0, 0, Окр(СуммаОфВысшие/числОфВысшие/12, 2)); 
		срСуммаОфСтаршие =  ?(числОфСтаршие = 0, 0, Окр(СуммаОфСтаршие/числОфСтаршие/12, 2));
		срСуммаОфМладшие = ?(числОфМладшие = 0, 0, Окр(СуммаОфМладшие/числОфМладшие/12, 2));
		срСуммаПрапорщики = ?(числПрапорщики = 0, 0, Окр(СуммаПрапорщики/числПрапорщики/12, 2));
		срСуммаСолдаты = ?(числСолдаты = 0, 0, Окр(СуммаСолдаты/числСолдаты/12, 2));
		срСуммаПоКонтракту = ?(числКурсантыКонтракт = 0, 0, Окр(СуммаПоКонтракту/числКурсантыКонтракт/12, 2));
		срСуммаДоКонтракта = ?(числКурсантыДоКонтракта = 0, 0, Окр(СуммаДоКонтракта/числКурсантыДоКонтракта/12, 2));
		срСуммаПоПризыву = ?(числСлужПоПризыву = 0, 0, Окр(СуммаПоПризыву/числСлужПоПризыву/12, 2));
		срСуммаОфВсего = срСуммаОфВысшие +  срСуммаОфСтаршие + срСуммаОфМладшие;
		срСуммаВсего = срСуммаОфВсего + срСуммаПрапорщики + срСуммаСолдаты + срСуммаПоКонтракту + срСуммаДоКонтракта + срСуммаПоПризыву;
		
		ВидРасчета = стрПотребность.П000010000101;
		
		надбОфВысшие = 0; 
		надбОфСтаршие = 0;
		надбОфМладшие = 0;
		надбПрапорщики = 0;
		надбСолдаты = 0;
		надбКурсантыКонтракт = 0;
		надбКурсантыДоКонтракта = 0;
		надбСлужПоПризыву = 0;
		
		Если СтрНайти(ВидРасчета.Наименование, "Оклад") = 0 Тогда
			надбОфВысшие = ?(окладДолжОфВысшие = 0, 0, Формат(срСуммаОфВысшие/окладДолжОфВысшие*100, "ЧДЦ=2")); 
			надбОфСтаршие = ?(окладДолжОфСтаршие = 0, 0, Формат(срСуммаОфСтаршие/окладДолжОфСтаршие*100, "ЧДЦ=2"));
			надбОфМладшие = ?(окладДолжОфМладшие = 0, 0, Формат(срСуммаОфМладшие/окладДолжОфМладшие*100, "ЧДЦ=2"));
			надбПрапорщики = ?(окладДолжПрапорщики = 0, 0, Формат(срСуммаПрапорщики/окладДолжПрапорщики*100, "ЧДЦ=2"));
			надбСолдаты = ?(окладДолжСолдаты = 0, 0, Формат(срСуммаСолдаты/окладДолжСолдаты*100, "ЧДЦ=2"));
			надбКурсантыКонтракт = ?(окладДолжКурсантыКонтракт = 0, 0, Формат(срСуммаПоКонтракту/окладДолжКурсантыКонтракт*100, "ЧДЦ=2"));
			надбКурсантыДоКонтракта = ?(окладДолжКурсантыДоКонтракта = 0, 0, Формат(срСуммаДоКонтракта/окладДолжКурсантыДоКонтракта*100, "ЧДЦ=2"));
			надбСлужПоПризыву = ?(окладДолжСлужПоПризыву = 0, 0, Формат(срСуммаПоПризыву/окладДолжСлужПоПризыву*100, "ЧДЦ=2"));
		КонецЕсли;
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "alterType_value", "01"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "0"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowExpense");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбКурсантыДоКонтракта_value", надбКурсантыДоКонтракта);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбКурсантыКонтракт_value", надбКурсантыКонтракт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбОфВысшие_value", надбОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбОфМладшие_value", надбОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбОфСтаршие_value", надбОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбПрапорщики_value", надбПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбСлужПоПризыву_value", надбСлужПоПризыву);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "надбСолдаты_value", надбСолдаты);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжКурсантыДоКонтракта_value", окладДолжКурсантыДоКонтракта);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжКурсантыКонтракт_value", окладДолжКурсантыКонтракт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжОфВысшие_value", окладДолжОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжОфМладшие_value", окладДолжОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжОфСтаршие_value", окладДолжОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжПрапорщики_value", окладДолжПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжСлужПоПризыву_value", окладДолжСлужПоПризыву);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладДолжСолдаты_value", окладДолжСолдаты);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванКурсантыКонтракт_value", окладЗванКурсантыКонтракт);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванОфВысшие_value", окладЗванОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванОфМладшие_value", окладЗванОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванОфСтаршие_value", окладЗванОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванПрапорщики_value", окладЗванПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "окладЗванСолдаты_value", окладЗванСолдаты);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "расходыИмя_value", ВидРасчета.Наименование);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "расходыКод_value", ВидРасчета.Код);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаКурсантыДоКонтракта_value", срСуммаДоКонтракта);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаКурсантыКонтракт_value", срСуммаПоКонтракту);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВСЕГО_value", срСуммаОфВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфВысшие_value", срСуммаОфВысшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфМладшие_value", срСуммаОфМладшие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаОфСтаршие_value", срСуммаОфСтаршие);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаПрапорщики_value", срСуммаПрапорщики);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасчетнаяИТОГО_value", срСуммаВсего);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасчетнаяТекГод_value", "0");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСлужПоПризыву_value", срСуммаПоПризыву);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаСолдаты_value", срСуммаСолдаты);
			ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		ЗаписьJSON.ЗаписатьКонецОбъекта();		
	КонецЦикла;  
	
	ОформитьПодвалТаблицы(ЗаписьJSON); 						
						
КонецПроцедуры

Процедура ЗаполнитьРасчОклада1Воен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_РасчетОкладов1 =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "04_РасчетОкладов1");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_РасчетОкладов1));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет окладов («Высшие офицеры», «Старшие офицеры», «Младшие офицеры», «Прапорщики», «Сержанты, старшины, солдаты, матросы по контракту», «Курсанты по контракту»)");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 4);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
	
	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьСотрудников.числОфВысшие;
	числОфСтаршие = ЧисленностьСотрудников.числОфСтаршие;  
	числОфМладшие = ЧисленностьСотрудников.числОфМладшие;
	числПрапорщики = ЧисленностьСотрудников.числПрапорщики;
	числСолдаты = ЧисленностьСотрудников.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьСотрудников.числКурсантыКонтракт;
	
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
    ОкладыПоТарифамОфВысш = ПараметрыОтчета.ДанныеПоРазделам.П0000400001;
	ОкладыПоТарифамОфВысш.Колонки.П000040000101.Имя = "Разряд";
	ОкладыПоТарифамОфВысш.Колонки.П000040000102.Имя = "Оклад";
	ОкладыПоТарифамОфВысш.Колонки.П000040000103.Имя = "Количество";
	
	ОкладыПоТарифамОфСтар = ПараметрыОтчета.ДанныеПоРазделам.П0000600001; 
	ОкладыПоТарифамОфСтар.Колонки.П000060000101.Имя = "Разряд";
	ОкладыПоТарифамОфСтар.Колонки.П000060000102.Имя = "Оклад";
	ОкладыПоТарифамОфСтар.Колонки.П000060000103.Имя = "Количество";

	ОкладыПоТарифамОфМлад = ПараметрыОтчета.ДанныеПоРазделам.П0000800001;
	ОкладыПоТарифамОфМлад.Колонки.П000080000101.Имя = "Разряд";
	ОкладыПоТарифамОфМлад.Колонки.П000080000102.Имя = "Оклад";
	ОкладыПоТарифамОфМлад.Колонки.П000080000103.Имя = "Количество";

    ОкладыПоТарифамПрапор = ПараметрыОтчета.ДанныеПоРазделам.П0001000001;
	ОкладыПоТарифамПрапор.Колонки.П000100000101.Имя = "Разряд";
	ОкладыПоТарифамПрапор.Колонки.П000100000102.Имя = "Оклад";
	ОкладыПоТарифамПрапор.Колонки.П000100000103.Имя = "Количество";
	
	ОкладыПоТарифамСолдаты = ПараметрыОтчета.ДанныеПоРазделам.П0001200001;
	ОкладыПоТарифамСолдаты.Колонки.П000120000101.Имя = "Разряд";
	ОкладыПоТарифамСолдаты.Колонки.П000120000102.Имя = "Оклад";
	ОкладыПоТарифамСолдаты.Колонки.П000120000103.Имя = "Количество";

	ОкладыПоТарифамКонтракт = ПараметрыОтчета.ДанныеПоРазделам.П0001400001;
	ОкладыПоТарифамКонтракт.Колонки.П000140000101.Имя = "Разряд";
	ОкладыПоТарифамКонтракт.Колонки.П000140000102.Имя = "Оклад";
	ОкладыПоТарифамКонтракт.Колонки.П000140000103.Имя = "Количество";
	
	ОкладыПоЗваниямОфВысш = ПараметрыОтчета.ДанныеПоРазделам.П0000500001; 
	ОкладыПоЗваниямОфВысш.Колонки.П000050000101.Имя = "Звание";
	ОкладыПоЗваниямОфВысш.Колонки.П000050000102.Имя = "Оклад";
	ОкладыПоЗваниямОфВысш.Колонки.П000050000103.Имя = "Количество";

    ОкладыПоЗваниямОфСтар = ПараметрыОтчета.ДанныеПоРазделам.П0000700001;
	ОкладыПоЗваниямОфСтар.Колонки.П000070000101.Имя = "Звание";
	ОкладыПоЗваниямОфСтар.Колонки.П000070000102.Имя = "Оклад";
	ОкладыПоЗваниямОфСтар.Колонки.П000070000103.Имя = "Количество";
	
	ОкладыПоЗваниямОфМлад = ПараметрыОтчета.ДанныеПоРазделам.П0000900001;
	ОкладыПоЗваниямОфМлад.Колонки.П000090000101.Имя = "Звание";
	ОкладыПоЗваниямОфМлад.Колонки.П000090000102.Имя = "Оклад";
	ОкладыПоЗваниямОфМлад.Колонки.П000090000103.Имя = "Количество";

	ОкладыПоЗваниямПрапор = ПараметрыОтчета.ДанныеПоРазделам.П0001100001;
	ОкладыПоЗваниямПрапор.Колонки.П000110000101.Имя = "Звание";
	ОкладыПоЗваниямПрапор.Колонки.П000110000102.Имя = "Оклад";
	ОкладыПоЗваниямПрапор.Колонки.П000110000103.Имя = "Количество";

	ОкладыПоЗваниямСолдаты = ПараметрыОтчета.ДанныеПоРазделам.П0001300001;
	ОкладыПоЗваниямСолдаты.Колонки.П000130000101.Имя = "Звание";
	ОкладыПоЗваниямСолдаты.Колонки.П000130000102.Имя = "Оклад";
	ОкладыПоЗваниямСолдаты.Колонки.П000130000103.Имя = "Количество";
	
	ОкладыПоЗваниямКонтракт = ПараметрыОтчета.ДанныеПоРазделам.П0001500001;
	ОкладыПоЗваниямКонтракт.Колонки.П000150000101.Имя = "Звание";
	ОкладыПоЗваниямКонтракт.Колонки.П000150000102.Имя = "Оклад";
	ОкладыПоЗваниямКонтракт.Колонки.П000150000103.Имя = "Количество";
	
	окладДолжОфВысшие = Окр(РасчетОкладов.П000040000204, 2);
	окладДолжОфСтаршие = Окр(РасчетОкладов.П000060000204, 2);
	окладДолжОфМладшие = Окр(РасчетОкладов.П000080000204, 2);						 
	окладДолжПрапорщики = Окр(РасчетОкладов.П000100000204, 2);						 
	окладДолжСолдаты = Окр(РасчетОкладов.П000120000204, 2); 
	окладДолжКурсантыКонтракт = Окр(РасчетОкладов.П000140000204, 2);  
	окладДолжСлужПоПризыву = 0;    					

	окладЗванОфВысшие = Окр(РасчетОкладов.П000050000204, 2);
	окладЗванОфМладшие = Окр(РасчетОкладов.П000070000204, 2); 
	окладЗванОфСтаршие = Окр(РасчетОкладов.П000090000204, 2); 
	окладЗванПрапорщики = Окр(РасчетОкладов.П000110000204, 2); 
	окладЗванСолдаты = Окр(РасчетОкладов.П000130000204, 2);
	окладЗванКурсантыКонтракт = Окр(РасчетОкладов.П000150000204, 2); 
	
	// Высшие офицеры
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "4");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжОфВысшие * числОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванОфВысшие * числОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванОфВысшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Высшие офицеры");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010001");
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	
	
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, окладыПоТарифамОфВысш);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямОфВысш);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
	ЗаписьJSON.ЗаписатьКонецОбъекта();	
	
	// Старшие офицеры 
			
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжОфСтаршие * числОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванОфСтаршие * числОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванОфСтаршие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Старшие офицеры");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010002");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамОфСтар);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямОфСтар);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	// Младшие офицеры
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжОфМладшие * числОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванОфМладшие * числОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванОфМладшие);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Младшие офицеры");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010003");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамОфМлад);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямОфМлад);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	// Прапорщики 
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжПрапорщики * числПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванПрапорщики * числПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванПрапорщики);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Прапорщики");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010004");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамПрапор);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямПрапор);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	
	// Солдаты
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД");  // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжСолдаты * числСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванСолдаты * числСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванСолдаты);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Сержанты, старшины, солдаты, матросы по контракту");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010005");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамСолдаты);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямСолдаты);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	// КурсантыКонтрактники

    ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоЗванию_value", числКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжКурсантыКонтракт * числКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоЗваниюВсего_value", окладЗванКурсантыКонтракт * числКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоЗванию_value", окладЗванКурсантыКонтракт);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Курсанты по контракту");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010006");
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
	        	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		    	ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамКонтракт);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
						ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниямКонтракт);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 

	ЗаписьJSON.ЗаписатьКонецОбъекта();

	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьРасчОклада2Воен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_РасчетОкладов1 =  Новый УникальныйИдентификатор;
	ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "05_РасчетОкладов2");
	ПараметрыЗаголовкаТаблицы.Вставить("id", Строка(УИД_РасчетОкладов1));
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет окладов («Курсанты до заключения контракта», «Военнослужащие по призыву»)");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalaryAdd");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 5);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы); 
	
	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	
	числКурсантыДоКонтракта = ЧисленностьСотрудников.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьСотрудников.числСлужПоПризыву;
	
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
   	
	ОкладыПоТарифамДоКонтракта = ПараметрыОтчета.ДанныеПоРазделам.П0001600001;
	ОкладыПоТарифамДоКонтракта.Колонки.П000160000101.Имя = "Разряд";
	ОкладыПоТарифамДоКонтракта.Колонки.П000160000102.Имя = "Оклад";
	ОкладыПоТарифамДоКонтракта.Колонки.П000160000103.Имя = "Количество";

	ОкладыПоТарифамПризыв = ПараметрыОтчета.ДанныеПоРазделам.П0001800001;
	ОкладыПоТарифамПризыв.Колонки.П000180000101.Имя = "Разряд";
	ОкладыПоТарифамПризыв.Колонки.П000180000102.Имя = "Оклад";
	ОкладыПоТарифамПризыв.Колонки.П000180000103.Имя = "Количество";
	
	окладДолжКурсантыДоКонтракта = Окр(РасчетОкладов.П000160000204, 2);
	окладДолжСлужПоПризыву = 0; 
	
	// До контракта 	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "4");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числКурсантыДоКонтракта);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжКурсантыДоКонтракта * числКурсантыДоКонтракта);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжКурсантыДоКонтракта);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Курсанту до заключения контракта");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010007");
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	
	
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамДоКонтракта);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	// Призыв 	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		УИД_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "2");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalary");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоПоДолжности_value", числСлужПоПризыву);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжностиВсего_value", окладДолжСлужПоПризыву * числСлужПоПризыву);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "срОкладПоДолжности_value", окладДолжСлужПоПризыву);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", "Военнослужащие по призыву");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", "010008");
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
	
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоТарифам(ЗаписьJSON, ОкладыПоТарифамДоКонтракта);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаписатьДанныеПоТарифам(ЗаписьJSON, окладыПоТарифам)

	УИД_Раздела = Строка(Новый УникальныйИдентификатор);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияПоДолжности");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Раздела);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:caption", "Расчет по должности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalarySubTablePost");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:name", "детализацияПоДолжности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		Если окладыПоТарифам.Итог("Количество")>0 Тогда
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    	ЗаписьJSON.ЗаписатьНачалоМассива();
			Для Каждого стрТариф Из окладыПоТарифам Цикл 
				Количество = стрТариф.Количество;
				Оклад = стрТариф.Оклад;
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				УИД_Строки = Строка(Новый УникальныйИдентификатор);
		    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "0");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalarySubTablePost");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "оклад_value", Оклад);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаИтого_value", Количество * Оклад);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "тарифныйРазрядИмя_value", стрТариф.Разряд.Наименование);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "тарифныйРазрядКод_value", Строка(стрТариф.Разряд.УникальныйИдентификатор()));
					ЗаписьJSON.ЗаписатьКонецОбъекта(); 
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;
			ЗаписьJSON.ЗаписатьКонецМассива();
		КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива();

КонецПроцедуры 

Процедура ЗаписатьДанныеПоЗваниям(ЗаписьJSON, ОкладыПоЗваниям)
	
	УИД_Раздела = Строка(Новый УникальныйИдентификатор);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияПоЗванию");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Раздела);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:caption", "Расчет по званию");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalarySubTableRank");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:name", "детализацияПоЗванию");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:order", 2);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    	ЗаписьJSON.ЗаписатьНачалоМассива();
		Для Каждого стрЗвание Из ОкладыПоЗваниям Цикл 
			Количество = стрЗвание.Количество;
			Оклад = стрЗвание.Оклад;
			Если Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			УИД_Строки = Строка(Новый УникальныйИдентификатор);
	    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();	
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "0");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSalarySubTableRank");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "званиеИмя_value", стрЗвание.Звание.Наименование);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "званиеКод_value", Строка(стрЗвание.Звание.УникальныйИдентификатор()));
					ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "оклад_value", Оклад);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаИтого_value", Количество * Оклад);
				ЗаписьJSON.ЗаписатьКонецОбъекта(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		КонецЦикла;
		ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива(); 
	
КонецПроцедуры

Процедура ЗаполнитьУвеличОкладВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_РасчетОкладов =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "10_УвеличОкладовПоВоинскДолжности");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_РасчетОкладов);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Увеличение окладов");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 6);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокУвеличениеОкладовВоен;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокУвеличениеОкладов"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00020");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON); 
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаВыслугаЛетВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаЗаВыслугу =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "11_НадбавкаВыслугаЛет");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаЗаВыслугу);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за выслугу лет");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 7);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокВыслугаЛет;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокВыслугаЛет"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00021");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
	ДобавитьВСоставСтрокуКонтракт();
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);	
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры    

Процедура ЗаполнитьНадбавкаКлассностьВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаКлассность =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "12_НадбавкаКлассность");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаКлассность);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за классность");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 8);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокКлассность;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокКлассность"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00022");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
	ДобавитьВСоставСтрокуКонтракт();
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаполнитьНадбавкаГостайнаВоен(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаГостайна =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "13_НадбавкаГостайна");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаГостайна);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за работу со сведениями составляющими гостайну");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 9);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокГостайна;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокГостайна"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00023");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
	ДобавитьВСоставСтрокуКонтракт();
	ДобавитьВСоставСтрокуПризыв();
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);

	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры  

Процедура ЗаполнитьНадбавкаОсобыеУсловия(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаОсобыеУсловия =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "14_НадбавкаОсобыеУсловия");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаОсобыеУсловия);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за особые условия службы");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 10);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокОсобыеУсловия;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокОсобыеУсловияСлужбы"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00024");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
	ДобавитьВСоставСтрокуКонтракт();
	ДобавитьВСоставСтрокуПризыв();
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);

КонецПроцедуры

Процедура ЗаполнитьНадбавкаПоощрительныеВыплаты(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаПоощрительные =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "15_НадбавкаОсобыеДостижения");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаПоощрительные);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за особые достижения в службе");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 11);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокПоощрения;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокПоощрительныеВыплаты"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00025");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
	ДобавитьВСоставСтрокуКонтракт();
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаРайонныйКоэффициент(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаРайонныйКоэффициент =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "16_НадбавкаРайонныйКоэффициент");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаРайонныйКоэффициент);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Районный коэффициент");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 12);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокРайКоэффициент;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокРайонныйКоэффициент"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00026");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
	ДобавитьВСоставСтрокуКонтракт();
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);

	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаСеверная(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаСеверная =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "17_НадбавкаСеверная");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаСеверная);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за службу в отдаленных местностях");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 13);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСеверная;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСевернаяНадбавка"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00027");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
	ДобавитьВСоставСтрокуКонтракт();
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаЮридическая(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаЮридическая =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "18_НадбавкаЮридическая");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаЮридическая);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка военнослужащим юридических подразделений");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 14);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокЮридическая;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокЮридическаяНадбавка"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00028");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
	ДобавитьВСоставСтрокуКонтракт();
	
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаГостайнаСтаж(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаГостайнаСтаж =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "19_НадбавкаГостайнаСтаж");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаГостайнаСтаж);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за стаж военной службы в структурных подразделениях по защите гостайны");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 15);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСтажГостайна;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСтажГостайны"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00029");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
		
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаШифр(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаШифр =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "20_НадбавкаШифр");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаШифр);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за стаж работы в шифровальных органах");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 16);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСтажШифр;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСтажШифровальнойРаботы"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00030");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
		
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ЗаполнитьНадбавкаСКР(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаСКР =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "УИД_НадбавкаСКР");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаСКР);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавка за службу в СКР");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 17);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ПереченьНадбавок = ПараметрыОтчета.ПеречниНадбавок.ПереченьНадбавокСлужбаСКР;
	
	ПараметрыДобавленияНадбавки = Новый Структура;
	ПараметрыДобавленияНадбавки.Вставить("ПолеТабличногоДокумента", "ПолеТабличногоДокументаРасчетНадбавокСлужбаВСКР"); 
	ПараметрыДобавленияНадбавки.Вставить("Раздел", "П00031");
	ПараметрыДобавленияНадбавки.Вставить("ПереченьНадбавок", ПереченьНадбавок);
	
	СоставСлужащих.Очистить();
	ДобавитьВСоставСтрокуВысшОфицеры();
	ДобавитьВСоставСтрокуСтарОфицеры();
	ДобавитьВСоставСтрокуМладОфицеры();
	ДобавитьВСоставСтрокуПрапорщики();
	ДобавитьВСоставСтрокуСолдаты();
		
	ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки);
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры 

Процедура ДобавитьСтрокиНадбавки(ЗаписьJSON, ПараметрыОтчета, ПараметрыДобавленияНадбавки) 
	
	ПолеТабличногоДокумента = ПараметрыДобавленияНадбавки.ПолеТабличногоДокумента;
	Раздел = ПараметрыДобавленияНадбавки.Раздел;
	ПереченьНадбавок = ПараметрыДобавленияНадбавки.ПереченьНадбавок;
	
	ДанныеПоНадбавке = ПараметрыОтчета.Показатели[ПолеТабличногоДокумента];
	ТаблНадбавок = ПараметрыОтчета.ДанныеПоРазделам[Раздел + "00001"];	
	
	Для Каждого стрСостав Из СоставСлужащих Цикл 
		КодСтроки = стрСостав.КодСтроки; 
		СвойствоСрПроцент = Раздел + "00003" + КодСтроки;
		Если Не ДанныеПоНадбавке.Свойство(СвойствоСрПроцент) Тогда
			Продолжить;
		КонецЕсли;
		ТаблНадбавкиСлуж = ТаблНадбавок.Скопировать(,Раздел + "0000101," + Раздел + "00001" + КодСтроки);
		ЧислСлуж = ДанныеПоНадбавке[Раздел + "00002" + КодСтроки];
		срПроцентСлуж = Окр(ДанныеПоНадбавке[Раздел + "00003" + КодСтроки]);
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "1");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeTitle");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", ЧислСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "среднПроцентНадбавки_value", срПроцентСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаНадбавок_value", ЧислСлуж * срПроцентСлуж);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", стрСостав.Наименование);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", стрСостав.Код);
		    ЗаписьJSON.ЗаписатьКонецОбъекта();
			
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
			ЗаписьJSON.ЗаписатьНачалоМассива();
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
					ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
					ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
					ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();			
					ЗаписьJSON.ЗаписатьКонецОбъекта();  
					ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
					ЗаписьJSON.ЗаписатьНачалоМассива();
						ЗаписьJSON.ЗаписатьНачалоОбъекта();
					    	ЗаписатьДанныеПоПроцентам(ЗаписьJSON, ТаблНадбавкиСлуж, ПереченьНадбавок);
						ЗаписьJSON.ЗаписатьКонецОбъекта();
					ЗаписьJSON.ЗаписатьКонецМассива();
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			ЗаписьJSON.ЗаписатьКонецМассива(); 
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();

	КонецЦикла; 	
	
КонецПроцедуры

Процедура ЗаписатьДанныеПоПроцентам(ЗаписьJSON, ТаблНадбавок, ПереченьНадбавок)
	
	КолонкаНадбавка = ТаблНадбавок.Колонки[0].Имя;
	КолонкаКоличество = ТаблНадбавок.Колонки[1].Имя;
	
	УИД_Раздела = Новый УникальныйИдентификатор;
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияРасчет");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Раздела));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:caption", "Расчет надбавки по должности");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeSubTable");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:name", "детализацияРасчет");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Детализации = Новый УникальныйИдентификатор;
	    ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		Если ТаблНадбавок.Итог(КолонкаКоличество) > 0 И  ТаблНадбавок.Итог(КолонкаНадбавка) > 0 Тогда
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
	    	ЗаписьJSON.ЗаписатьНачалоМассива();
			Для Каждого стрЗвание Из ТаблНадбавок Цикл 
				Количество = стрЗвание[КолонкаКоличество];
				Надбавка = стрЗвание[КолонкаНадбавка];
				Если Количество = 0 Тогда
					Продолжить;
				КонецЕсли; 
				ИмяНадбавки = "";
				КодНадбавки = "";
				Если Надбавка > 0 Тогда
					стрПоиска = ПереченьНадбавок.Найти(Надбавка, "Размер");
					Если стрПоиска <> Неопределено Тогда
						ИмяНадбавки = стрПоиска.Наименование;
						КодНадбавки = стрПоиска.Код;
					КонецЕсли;
				Иначе
					Продолжить;
				КонецЕсли;
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				УИД_Строки = Новый УникальныйИдентификатор;
		    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Строки));
				ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Строки));
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "0");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeSubTable");
						ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаИмя_value", ИмяНадбавки);  
						ЗаписатьСвойствоJSON(ЗаписьJSON, "надбавкаКод_value", КодНадбавки);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "размерНадбавки_value", Надбавка);
						ЗаписатьСвойствоJSON(ЗаписьJSON, "размерНадбавкиИтого_value", Надбавка * Количество);
					ЗаписьJSON.ЗаписатьКонецОбъекта(); 
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;
			ЗаписьJSON.ЗаписатьКонецМассива(); 
		КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива(); 
	
КонецПроцедуры

Процедура ЗаписатьНадбавкаДоплатаЗаРиск(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаРиск =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "40_ДоплатаЗаРиск");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаРиск);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Ежемесячная надбавка за выполнение задач, непосредственно связанных с риском для жизни и здоровья в мирное время");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeRisk");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 17);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);	
	
	ДанныеПоНадбавке = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетНадбавокДоплатаЗаРиск;
	РасчетОкладов = ПараметрыОтчета.Показатели.ПолеТабличногоДокументаРасчетОкладов;
		
	СуммаНадбавкаОфВысшие = ДанныеПоНадбавке.П000320000102;
	СуммаНадбавкаОфСтаршие = ДанныеПоНадбавке.П000320000103;  
	СуммаНадбавкаОфМладшие = ДанныеПоНадбавке.П000320000104;
	СуммаНадбавкаПрапорщики = ДанныеПоНадбавке.П000320000105;
	СуммаНадбавкаСолдаты = ДанныеПоНадбавке.П000320000106; 
	СуммаНадбавкаКонтрактники = ДанныеПоНадбавке.П000320000107;
		
	срПроцентОфВысшие = Окр(ДанныеПоНадбавке.П000320000202, 2);
	срПроцентОфСтаршие = Окр(ДанныеПоНадбавке.П000320000203, 2);
	срПроцентОфМладшие = Окр(ДанныеПоНадбавке.П000320000204, 2);
	срПроцентПрапорщики = Окр(ДанныеПоНадбавке.П000320000205, 2);
    срПроцентСолдаты = Окр(ДанныеПоНадбавке.П000320000206, 2);
	срПроцентКонтрактники = Окр(ДанныеПоНадбавке.П000320000207, 2);
    	
	окладДолжОфВысшие = Окр(РасчетОкладов.П000040000204, 2);
	окладДолжОфСтаршие = Окр(РасчетОкладов.П000060000204, 2);
	окладДолжОфМладшие = Окр(РасчетОкладов.П000080000204, 2);						 
	окладДолжПрапорщики = Окр(РасчетОкладов.П000100000204, 2);						 
	окладДолжСолдаты = Окр(РасчетОкладов.П000120000204, 2); 
	окладДолжКурсантыКонтракт = Окр(РасчетОкладов.П000140000204, 2);  
	окладДолжКурсантыДоКонтракта = Окр(РасчетОкладов.П000160000204, 2);				

	ЧисленностьСотрудников = ЧисленностьСотрудников(ПараметрыОтчета.Показатели.ПолеТабличногоДокументаПотребность);
	числОфВысшие = ЧисленностьСотрудников.числОфВысшие;
	числОфСтаршие = ЧисленностьСотрудников.числОфСтаршие;  
	числОфМладшие = ЧисленностьСотрудников.числОфМладшие;
	числПрапорщики = ЧисленностьСотрудников.числПрапорщики;
	числСолдаты = ЧисленностьСотрудников.числСолдаты; 
	числКурсантыКонтракт = ЧисленностьСотрудников.числКурсантыКонтракт;
	числКурсантыДоКонтракта = ЧисленностьСотрудников.числКурсантыДоКонтракта;
	числСлужПоПризыву = ЧисленностьСотрудников.числСлужПоПризыву;
     
	ПараметрыСтроки = Новый Структура("ЧислоВоен, СредПроцент, Должность, КодДолжности, ФондНадбавки, Оклад");
	
	// Высшие офицеры 
	ПараметрыСтроки.ЧислоВоен = числОфВысшие;
	ПараметрыСтроки.СредПроцент = срПроцентОфВысшие;
	ПараметрыСтроки.Должность = "Высшие офицеры";
	ПараметрыСтроки.КодДолжности = "010001";
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаОфВысшие; 
	ПараметрыСтроки.Оклад = окладДолжОфВысшие;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	
	// Старшие офицеры 
	ПараметрыСтроки.ЧислоВоен = числОфСтаршие;
	ПараметрыСтроки.СредПроцент = срПроцентОфСтаршие;
	ПараметрыСтроки.Должность = "Старшие офицеры";
	ПараметрыСтроки.КодДолжности = "010002"; 
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаОфСтаршие; 
	ПараметрыСтроки.Оклад = окладДолжОфСтаршие;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки); 
	
	// Младшие офицеры 
	ПараметрыСтроки.ЧислоВоен = числОфМладшие;
	ПараметрыСтроки.СредПроцент = срПроцентОфМладшие;
	ПараметрыСтроки.Должность = "Младшие офицеры";
	ПараметрыСтроки.КодДолжности = "010003";
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаОфМладшие;
	ПараметрыСтроки.Оклад = окладДолжОфМладшие;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);

	// Прапорщики 
	ПараметрыСтроки.ЧислоВоен = числПрапорщики;
	ПараметрыСтроки.СредПроцент = срПроцентПрапорщики;
	ПараметрыСтроки.Должность = "Прапорщики";
	ПараметрыСтроки.КодДолжности = "010004";
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаПрапорщики;
	ПараметрыСтроки.Оклад = окладДолжПрапорщики;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	
	// Солдаты 
	ПараметрыСтроки.ЧислоВоен = числСолдаты;
	ПараметрыСтроки.СредПроцент = срПроцентСолдаты;
	ПараметрыСтроки.Должность = "Сержанты, старшины, солдаты, матросы по контракту";
	ПараметрыСтроки.КодДолжности = "010005";  
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаСолдаты;
	ПараметрыСтроки.Оклад = окладДолжСолдаты;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	
	// Контрактники 
	ПараметрыСтроки.ЧислоВоен = числКурсантыКонтракт;
	ПараметрыСтроки.СредПроцент = срПроцентКонтрактники;
	ПараметрыСтроки.Должность = "Курсанты по контракту";
	ПараметрыСтроки.КодДолжности = "010006";  
	ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаКонтрактники;
	ПараметрыСтроки.Оклад = окладДолжКурсантыКонтракт;
	ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	
	// Призыв
	Если ДанныеПоНадбавке.Свойство("П000320000208") Тогда
		СуммаНадбавкаПризыв = ДанныеПоНадбавке.П000320000108;
		срПроцентПризыв = Окр(ДанныеПоНадбавке.П000320000208, 2);
	    окладДолжСлужПоПризыву = 0; 
		
		ПараметрыСтроки.ЧислоВоен = числСлужПоПризыву;
		ПараметрыСтроки.СредПроцент = срПроцентПризыв;
		ПараметрыСтроки.Должность = "Военнослужащие по призыву";
		ПараметрыСтроки.КодДолжности = "010008";  
		ПараметрыСтроки.ФондНадбавки = СуммаНадбавкаПризыв;
		ПараметрыСтроки.Оклад = окладДолжСлужПоПризыву;
		ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки);
	КонецЕсли;
	
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ДобавитьСтрокуНадбавкиЗаРиск(ЗаписьJSON, ПараметрыОтчета, ПараметрыСтроки)
	
	ЧислоВоен = ПараметрыСтроки.ЧислоВоен;
	СредПроцент = ПараметрыСтроки.СредПроцент;
	ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
	Уид_Строки = Строка(Новый УникальныйИдентификатор);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
		ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "3");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeRisk");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
			ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", ЧислоВоен);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "среднПроцентНадбавки_value", СредПроцент);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма1_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма2_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма3_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ОтчГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "сумма_ТекГ_value", "0.00");
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиИмя_value", ПараметрыСтроки.Должность);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "типДолжностиКод_value", ПараметрыСтроки.КодДолжности);
	    ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
		ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subSheets"); 
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheetsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();			
				ЗаписьJSON.ЗаписатьКонецОбъекта();  
				ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
				ЗаписьJSON.ЗаписатьНачалоМассива();
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
				    	ЗаписатьДанныеПоНадбавкамЗаРиск(ЗаписьJSON, ПараметрыСтроки);
					ЗаписьJSON.ЗаписатьКонецОбъекта();
				ЗаписьJSON.ЗаписатьКонецМассива();
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		ЗаписьJSON.ЗаписатьКонецМассива(); 
		
	ЗаписьJSON.ЗаписатьКонецОбъекта();

КонецПроцедуры

Процедура ЗаписатьДанныеПоНадбавкамЗаРиск(ЗаписьJSON, ПараметрыСтроки)
	
	УИД_Раздела = Новый УникальныйИдентификатор;
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "детализацияРасчет");
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Раздела));
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:caption", "Расчет надбавки");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeRiskSubTable");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:hideCode", true);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:name", "детализацияРасчет");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:order", 1);	
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    ЗаписьJSON.ЗаписатьНачалоМассива();
    ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		УИД_Детализации = Новый УникальныйИдентификатор;
	    ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:subRows");
		ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookSubRowsList");
		ЗаписьJSON.ЗаписатьИмяСвойства("properties");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();		
		ЗаписьJSON.ЗаписатьКонецОбъекта(); 
		
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
    	ЗаписьJSON.ЗаписатьНачалоМассива();
		
			Количество = ПараметрыСтроки.ЧислоВоен;
			Надбавка = ПараметрыСтроки.ФондНадбавки;
			Оклад = ПараметрыСтроки.Оклад;
			
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			УИД_Строки = Новый УникальныйИдентификатор;
	    	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", Строка(УИД_Строки));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", Строка(УИД_Строки));
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:subDataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();	
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "0");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeRiskSubTable");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "имяСтроки_value", "строкаРасчета");
					ЗаписатьСвойствоJSON(ЗаписьJSON, "количСтрокИзТаблицыОкладов_value", 1);  
					ЗаписатьСвойствоJSON(ЗаписьJSON, "количествоСлуж_value", Количество);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "окладПоДолжности_value", Оклад);
					ЗаписатьСвойствоJSON(ЗаписьJSON, "фондНадбавки_value", Надбавка);
				ЗаписьJSON.ЗаписатьКонецОбъекта(); 
			ЗаписьJSON.ЗаписатьКонецОбъекта();
		 ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта(); 
	ЗаписьJSON.ЗаписатьКонецМассива(); 
	
КонецПроцедуры

Процедура ЗаписатьНадбавкаФСБ(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаФСБ =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "41_НадбавкиФСБ");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаФСБ);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: Надбавки сотрудникам ФСБ");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeFSB");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 19);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ТаблицаНадбавокФСБ = ПараметрыОтчета.ДанныеПоРазделам.П0003600001;
	
	Для Каждого стрНадбавкаФСБ Из ТаблицаНадбавокФСБ Цикл
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "3");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeFSB");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "имяВыплаты", стрНадбавкаФСБ.П000360000101);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "примечание", стрНадбавкаФСБ.П000360000104);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасхода", стрНадбавкаФСБ.П000360000102);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасходаПрошл", стрНадбавкаФСБ.П000360000103);
			ЗаписьJSON.ЗаписатьКонецОбъекта();
         ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;
		
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Процедура ЗаписатьНадбавкаПрочие(ПараметрыОтчета, ЗаписьJSON)
	
	УИД_НадбавкаФСБ =  Строка(Новый УникальныйИдентификатор);
    ПараметрыЗаголовкаТаблицы = Новый Структура;
	ПараметрыЗаголовкаТаблицы.Вставить("name",  "42_НадбавкиПрочее");
	ПараметрыЗаголовкаТаблицы.Вставить("id", УИД_НадбавкаФСБ);
	ПараметрыЗаголовкаТаблицы.Вставить("caption", "Расчет надбавок: прочие");
	ПараметрыЗаголовкаТаблицы.Вставить("defaultRowType", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeOther");
	ПараметрыЗаголовкаТаблицы.Вставить("hideCode", true);
	ПараметрыЗаголовкаТаблицы.Вставить("order", 19);   
	ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовкаТаблицы);
	
	ТаблицаНадбавокПрочие = ПараметрыОтчета.ДанныеПоРазделам.П0003500001;
	
	Для Каждого стрНадбавкаПрочие Из ТаблицаНадбавокПрочие Цикл
		ЗаписьJSON.ЗаписатьНачалоОбъекта(); 
		Уид_Строки = Строка(Новый УникальныйИдентификатор);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "name", УИД_Строки); 
			ЗаписатьСвойствоJSON(ЗаписьJSON, "id", УИД_Строки);
			ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataRow");
			ЗаписьJSON.ЗаписатьИмяСвойства("properties");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			    ЗаписатьСвойствоJSON(ЗаписьJSON, "fkr_value", ПараметрыОтчета.КодРаздела);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:code", "3");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:rowClassName", "ru.krista.planning.obas.methodicsRG.mRG_0000113.RowSurchargeOther");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "subekr_value", "ФЭД"); // ???
				ЗаписатьСвойствоJSON(ЗаписьJSON, "vr_value", ПараметрыОтчета.КодВидаРасходов);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "имяВыплаты", стрНадбавкаПрочие.П000350000101);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "комментарий", стрНадбавкаПрочие.П000350000103);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "комментарийПрош", стрНадбавкаПрочие.П000350000105);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасхода", стрНадбавкаПрочие.П000350000102);
				ЗаписатьСвойствоJSON(ЗаписьJSON, "суммаРасходаПрошл", стрНадбавкаПрочие.П000350000104);
			ЗаписьJSON.ЗаписатьКонецОбъекта();
         ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;
		
	ОформитьПодвалТаблицы(ЗаписьJSON);
	
КонецПроцедуры

Функция ЧисленностьСотрудников(СтруктураПотребность) 
	
	СтруктураЧисленности = Новый Структура;
	СтруктураЧисленности.Вставить("числОфВсего", СтруктураПотребность.П000020000203);
	СтруктураЧисленности.Вставить("числОфВысшие", СтруктураПотребность.П000020000204);
    СтруктураЧисленности.Вставить("числОфСтаршие", СтруктураПотребность.П000020000205);  
  	СтруктураЧисленности.Вставить("числОфМладшие", СтруктураПотребность.П000020000206);
    СтруктураЧисленности.Вставить("числПрапорщики", СтруктураПотребность.П000020000207);
    СтруктураЧисленности.Вставить("числСолдаты", СтруктураПотребность.П000020000208); 
	СтруктураЧисленности.Вставить("числКурсантыКонтракт", СтруктураПотребность.П000020000209);
    СтруктураЧисленности.Вставить("числКурсантыДоКонтракта", СтруктураПотребность.П000020000210);
	СтруктураЧисленности.Вставить("числСлужПоПризыву", СтруктураПотребность.П000020000211);
	СтруктураЧисленности.Вставить("числВсего", СтруктураПотребность.П000020000213);   

	Возврат СтруктураЧисленности;
КонецФункции

Процедура  ПодготовитьДанныеДляРасчетаДДСотр(ПараметрыОтчета, ЗаписьJSON)
	//Результат.Вставить("Расчет2", "");

КонецПроцедуры

Процедура ПодготовитьДанныеДляРасчетаЗП(ПараметрыОтчета, ЗаписьJSON)
	//Результат.Вставить("Расчет3", "");

КонецПроцедуры

Процедура ДобавитьВСоставСтрокуВысшОфицеры()
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010001";
	стрСостав.КодСтроки = "02";
	стрСостав.Наименование = "Высшие офицеры";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуСтарОфицеры()
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010002"; 
	стрСостав.КодСтроки = "03";
	стрСостав.Наименование = "Старшие офицеры";
КонецПроцедуры 

Процедура ДобавитьВСоставСтрокуМладОфицеры()
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010003";  
	стрСостав.КодСтроки = "04";
	стрСостав.Наименование = "Младшие офицеры";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуПрапорщики()
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010004";
	стрСостав.КодСтроки = "05";
	стрСостав.Наименование = "Прапорщики";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуСолдаты()
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010005"; 
	стрСостав.КодСтроки = "06";
	стрСостав.Наименование = "Сержанты, старшины, солдаты, матросы по контракту";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуКонтракт()
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010006";
	стрСостав.КодСтроки = "07";
	стрСостав.Наименование = "Курсанты по контракту";
КонецПроцедуры

Процедура ДобавитьВСоставСтрокуПризыв()
	стрСостав = СоставСлужащих.Добавить();
	стрСостав.Код = "010007";  
	стрСостав.КодСтроки = "08";
	стрСостав.Наименование = "Военнослужащие по призыву";
КонецПроцедуры

#Область ВспомогательныеПроцедурыЗаписиJSON

Процедура ОформитьЗаголовокТаблицы(ЗаписьJSON, ПараметрыЗаголовка)
	
	ЗаписатьСвойствоJSON(ЗаписьJSON, "name", ПараметрыЗаголовка.name);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "id", ПараметрыЗаголовка.id);
	ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataSheet");
	ЗаписьJSON.ЗаписатьИмяСвойства("properties");
	ЗаписьJSON.ЗаписатьНачалоОбъекта();	
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:caption", ПараметрыЗаголовка.caption);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:defaultRowType", ПараметрыЗаголовка.defaultRowType);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:hideCode", ПараметрыЗаголовка.hideCode);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:name", ПараметрыЗаголовка.name);
		ЗаписатьСвойствоJSON(ЗаписьJSON, "pln:order", ПараметрыЗаголовка.order); 
		ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
			ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
				ЗаписатьСвойствоJSON(ЗаписьJSON, "name", "pln:rows");
				ЗаписатьСвойствоJSON(ЗаписьJSON, "type", "pln:dataBookRowsList");
				ЗаписьJSON.ЗаписатьИмяСвойства("properties");
					ЗаписьJSON.ЗаписатьНачалоОбъекта();
					ЗаписьJSON.ЗаписатьКонецОбъекта();
			ЗаписьJSON.ЗаписатьИмяСвойства("nodes");
			ЗаписьJSON.ЗаписатьНачалоМассива();	 
					
КонецПроцедуры  

Процедура ОформитьПодвалТаблицы(ЗаписьJSON)
	
	ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
КонецПроцедуры

Процедура ЗаписатьСвойствоJSON(Запись, ИмяСвойства, Значение)
	Запись.ЗаписатьИмяСвойства(ИмяСвойства);
	Запись.ЗаписатьЗначение(Значение);
КонецПроцедуры

#КонецОбласти